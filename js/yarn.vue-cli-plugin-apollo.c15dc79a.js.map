{"version":3,"sources":["webpack:///./node_modules/vue-cli-plugin-apollo/graphql-client/dist/index.js","webpack:///./node_modules/vue-cli-plugin-apollo/graphql-client/index.js"],"names":["Object","defineProperty","exports","value","createApolloClient","restartWebsockets","_apolloClient","_apolloLink","_apolloUploadClient","_apolloCacheInmemory","_subscriptionsTransportWs","_messageTypes","_interopRequireDefault","_apolloLinkWs","_apolloUtilities","_apolloLinkPersistedQueries","_apolloLinkContext","_apolloLinkState","obj","__esModule","_typeof","Symbol","iterator","constructor","prototype","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","configurable","writable","_ref","wsClient","authLink","stateLink","_ref$clientId","clientId","httpEndpoint","_ref$wsEndpoint","wsEndpoint","_ref$tokenName","tokenName","_ref$persisting","persisting","_ref$ssr","ssr","_ref$websocketsOnly","websocketsOnly","_ref$link","link","_ref$defaultHttpLink","defaultHttpLink","_ref$httpLinkOptions","httpLinkOptions","_ref$cache","cache","_ref$inMemoryCacheOpt","inMemoryCacheOptions","_ref$apollo","apollo","_ref$clientState","clientState","_ref$getAuth","getAuth","defaultGetAuth","_ref$typeDefs","typeDefs","undefined","_ref$resolvers","resolvers","_ref$onCacheInit","onCacheInit","disableHttp","InMemoryCache","httpLink","createUploadLink","uri","from","setContext","_","_ref2","headers","authorization","authorizationHeader","concat","window","state","__APOLLO_STATE__","restore","persistingOpts","createPersistedQueryLink","SubscriptionClient","reconnect","connectionParams","wsLink","WebSocketLink","split","_ref3","query","_getMainDefinition","getMainDefinition","kind","operation","console","warn","withClientState","apolloClient","ApolloClient","ssrMode","ssrForceFetchDelay","connectToDevTools","onResetStore","writeDefaults","operations","assign","close","connect","id","sendMessage","GQL_START","options","token","localStorage","getItem","module"],"mappings":"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","file":"js/yarn.vue-cli-plugin-apollo.c15dc79a.js","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createApolloClient = createApolloClient;\nexports.restartWebsockets = restartWebsockets;\n\nvar _apolloClient = require(\"apollo-client\");\n\nvar _apolloLink = require(\"apollo-link\");\n\nvar _apolloUploadClient = require(\"apollo-upload-client\");\n\nvar _apolloCacheInmemory = require(\"apollo-cache-inmemory\");\n\nvar _subscriptionsTransportWs = require(\"subscriptions-transport-ws\");\n\nvar _messageTypes = _interopRequireDefault(require(\"subscriptions-transport-ws/dist/message-types\"));\n\nvar _apolloLinkWs = require(\"apollo-link-ws\");\n\nvar _apolloUtilities = require(\"apollo-utilities\");\n\nvar _apolloLinkPersistedQueries = require(\"apollo-link-persisted-queries\");\n\nvar _apolloLinkContext = require(\"apollo-link-context\");\n\nvar _apolloLinkState = require(\"apollo-link-state\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction createApolloClient(_ref) {\n  var _ref$clientId = _ref.clientId,\n      clientId = _ref$clientId === void 0 ? 'defaultClient' : _ref$clientId,\n      httpEndpoint = _ref.httpEndpoint,\n      _ref$wsEndpoint = _ref.wsEndpoint,\n      wsEndpoint = _ref$wsEndpoint === void 0 ? null : _ref$wsEndpoint,\n      _ref$tokenName = _ref.tokenName,\n      tokenName = _ref$tokenName === void 0 ? 'apollo-token' : _ref$tokenName,\n      _ref$persisting = _ref.persisting,\n      persisting = _ref$persisting === void 0 ? false : _ref$persisting,\n      _ref$ssr = _ref.ssr,\n      ssr = _ref$ssr === void 0 ? false : _ref$ssr,\n      _ref$websocketsOnly = _ref.websocketsOnly,\n      websocketsOnly = _ref$websocketsOnly === void 0 ? false : _ref$websocketsOnly,\n      _ref$link = _ref.link,\n      link = _ref$link === void 0 ? null : _ref$link,\n      _ref$defaultHttpLink = _ref.defaultHttpLink,\n      defaultHttpLink = _ref$defaultHttpLink === void 0 ? true : _ref$defaultHttpLink,\n      _ref$httpLinkOptions = _ref.httpLinkOptions,\n      httpLinkOptions = _ref$httpLinkOptions === void 0 ? {} : _ref$httpLinkOptions,\n      _ref$cache = _ref.cache,\n      cache = _ref$cache === void 0 ? null : _ref$cache,\n      _ref$inMemoryCacheOpt = _ref.inMemoryCacheOptions,\n      inMemoryCacheOptions = _ref$inMemoryCacheOpt === void 0 ? {} : _ref$inMemoryCacheOpt,\n      _ref$apollo = _ref.apollo,\n      apollo = _ref$apollo === void 0 ? {} : _ref$apollo,\n      _ref$clientState = _ref.clientState,\n      clientState = _ref$clientState === void 0 ? null : _ref$clientState,\n      _ref$getAuth = _ref.getAuth,\n      getAuth = _ref$getAuth === void 0 ? defaultGetAuth : _ref$getAuth,\n      _ref$typeDefs = _ref.typeDefs,\n      typeDefs = _ref$typeDefs === void 0 ? undefined : _ref$typeDefs,\n      _ref$resolvers = _ref.resolvers,\n      resolvers = _ref$resolvers === void 0 ? undefined : _ref$resolvers,\n      _ref$onCacheInit = _ref.onCacheInit,\n      onCacheInit = _ref$onCacheInit === void 0 ? undefined : _ref$onCacheInit;\n  var wsClient, authLink, stateLink;\n  var disableHttp = websocketsOnly && !ssr && wsEndpoint; // Apollo cache\n\n  if (!cache) {\n    cache = new _apolloCacheInmemory.InMemoryCache(inMemoryCacheOptions);\n  }\n\n  if (!disableHttp) {\n    var httpLink = (0, _apolloUploadClient.createUploadLink)(_objectSpread({\n      uri: httpEndpoint\n    }, httpLinkOptions));\n\n    if (!link) {\n      link = httpLink;\n    } else if (defaultHttpLink) {\n      link = (0, _apolloLink.from)([link, httpLink]);\n    } // HTTP Auth header injection\n\n\n    authLink = (0, _apolloLinkContext.setContext)(function (_, _ref2) {\n      var headers = _ref2.headers;\n      var authorization = getAuth(tokenName);\n      var authorizationHeader = authorization ? {\n        authorization: authorization\n      } : {};\n      return {\n        headers: _objectSpread({}, headers, {}, authorizationHeader)\n      };\n    }); // Concat all the http link parts\n\n    link = authLink.concat(link);\n  } // On the server, we don't want WebSockets and Upload links\n\n\n  if (!ssr) {\n    // If on the client, recover the injected state\n    if (typeof window !== 'undefined') {\n      // eslint-disable-next-line no-underscore-dangle\n      var state = window.__APOLLO_STATE__;\n\n      if (state && state[clientId]) {\n        // Restore state\n        cache.restore(state[clientId]);\n      }\n    }\n\n    if (!disableHttp) {\n      var persistingOpts = {};\n\n      if (_typeof(persisting) === 'object' && persisting != null) {\n        persistingOpts = persisting;\n        persisting = true;\n      }\n\n      if (persisting === true) {\n        link = (0, _apolloLinkPersistedQueries.createPersistedQueryLink)(persistingOpts).concat(link);\n      }\n    } // Web socket\n\n\n    if (wsEndpoint) {\n      wsClient = new _subscriptionsTransportWs.SubscriptionClient(wsEndpoint, {\n        reconnect: true,\n        connectionParams: function connectionParams() {\n          var authorization = getAuth(tokenName);\n          return authorization ? {\n            authorization: authorization,\n            headers: {\n              authorization: authorization\n            }\n          } : {};\n        }\n      }); // Create the subscription websocket link\n\n      var wsLink = new _apolloLinkWs.WebSocketLink(wsClient);\n\n      if (disableHttp) {\n        link = wsLink;\n      } else {\n        link = (0, _apolloLink.split)( // split based on operation type\n        function (_ref3) {\n          var query = _ref3.query;\n\n          var _getMainDefinition = (0, _apolloUtilities.getMainDefinition)(query),\n              kind = _getMainDefinition.kind,\n              operation = _getMainDefinition.operation;\n\n          return kind === 'OperationDefinition' && operation === 'subscription';\n        }, wsLink, link);\n      }\n    }\n  }\n\n  if (clientState) {\n    console.warn(\"clientState is deprecated, see https://vue-cli-plugin-apollo.netlify.com/guide/client-state.html\");\n    stateLink = (0, _apolloLinkState.withClientState)(_objectSpread({\n      cache: cache\n    }, clientState));\n    link = (0, _apolloLink.from)([stateLink, link]);\n  }\n\n  var apolloClient = new _apolloClient.ApolloClient(_objectSpread({\n    link: link,\n    cache: cache\n  }, ssr ? {\n    // Set this on the server to optimize queries when SSR\n    ssrMode: true\n  } : {\n    // This will temporary disable query force-fetching\n    ssrForceFetchDelay: 100,\n    // Apollo devtools\n    connectToDevTools: process.env.NODE_ENV !== 'production'\n  }, {\n    typeDefs: typeDefs,\n    resolvers: resolvers\n  }, apollo)); // Re-write the client state defaults on cache reset\n\n  if (stateLink) {\n    apolloClient.onResetStore(stateLink.writeDefaults);\n  }\n\n  if (onCacheInit) {\n    onCacheInit(cache);\n    apolloClient.onResetStore(function () {\n      return onCacheInit(cache);\n    });\n  }\n\n  return {\n    apolloClient: apolloClient,\n    wsClient: wsClient,\n    stateLink: stateLink\n  };\n}\n\nfunction restartWebsockets(wsClient) {\n  // Copy current operations\n  var operations = Object.assign({}, wsClient.operations); // Close connection\n\n  wsClient.close(true); // Open a new one\n\n  wsClient.connect(); // Push all current operations to the new connection\n\n  Object.keys(operations).forEach(function (id) {\n    wsClient.sendMessage(id, _messageTypes[\"default\"].GQL_START, operations[id].options);\n  });\n}\n\nfunction defaultGetAuth(tokenName) {\n  if (typeof window !== 'undefined') {\n    // get the authentication token from local storage if it exists\n    var token = window.localStorage.getItem(tokenName); // return the headers to the context so httpLink can read them\n\n    return token ? \"Bearer \".concat(token) : '';\n  }\n}","module.exports = require('./dist/index')\n"],"sourceRoot":""}