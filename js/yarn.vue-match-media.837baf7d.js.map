{"version":3,"sources":["webpack:///./node_modules/vue-match-media/src/index.js"],"names":["MQ","MQMAP","Object","defineProperty","Vue","prototype","this","mixin","isIsolated","$options","mq","config","isolated","isRoot","$root","inherited","$parent","inheritedKeys","keys","mergedKeys","Set","concat","filter","k","observed","Array","from","reduce","obs","ownQuery","mql","window","matchMedia","addListener","e","matches","enumerable","configurable","util","defineReactive","directive","el","value","expression","arg","modifiers","context","matchers","ANY","length","any","NOT","Function","warn","find","m","forEach","$watch","newVal","oldVal","call"],"mappings":"wHAGA,MAAMA,EAAK,qBACLC,EAAQ,2BAEC,eACbC,OAAOC,eAAeC,EAAIC,UAAW,MAAO,CAC1C,MACE,OAAOC,KAAKN,MAIhBI,EAAIG,MAAM,CACR,eACE,MAAMC,EAAaF,KAAKG,SAASC,IAAMJ,KAAKG,SAASC,GAAGC,QAAUL,KAAKG,SAASC,GAAGC,OAAOC,SACpFC,EAASP,OAASA,KAAKQ,MACvBC,EAAYT,KAAKU,SAAWV,KAAKU,QAAQf,GACzCgB,EAAgBT,GAAcK,IAAWE,EAAY,GAAKb,OAAOgB,KAAKH,GAE5E,GAAIT,KAAKG,SAASC,GAAI,CACpBJ,KAAKL,GAAS,GAEd,MAAMkB,EAAa,IAAIC,IAAIH,EAAcI,OACvCnB,OAAOgB,KAAKZ,KAAKG,SAASC,IACvBY,OAAOC,GAAW,WAANA,KAGXC,EAAWC,MAAMC,KAAKP,GACzBQ,OAAO,CAACC,EAAKL,KACZ,MAAMM,EAAWvB,KAAKG,SAASC,GAAGa,GAC5BO,EAAMD,EAAWE,OAAOC,WAAWH,GAAYd,EAAUQ,GAK/D,OAJAO,EAAIG,YAAYC,IAAON,EAAIL,GAAKW,EAAEC,UAElCP,EAAIL,GAAKO,EAAIK,QACb7B,KAAKL,GAAOsB,GAAKO,EACVF,GACN,IAEL1B,OAAOC,eAAeqB,EAAU,MAAO,CACrCY,YAAY,EACZC,cAAc,EACd,MACE,OAAOnC,OAAOgB,KAAKZ,MAChBgB,OAAOC,GAAW,QAANA,GACZD,OAAOC,GAAKjB,KAAKiB,OAIxBnB,EAAIkC,KAAKC,eAAejC,KAAMN,EAAIwB,QACzBT,IACTT,KAAKL,GAASc,EACdX,EAAIkC,KAAKC,eAAejC,KAAMN,EAAIM,KAAKU,QAAQhB,QAKrDI,EAAIoC,UAAU,UAAW,CACvB,KAAMC,GAAI,MAACC,EAAK,WAAEC,EAAU,IAAEC,EAAG,UAAEC,IAAY,QAACC,IAC9C,MAAMC,EAAW,IAAI7C,OAAOgB,KAAK2B,IAC3BG,GAAOD,EAASE,QAAUJ,EAAUK,IACpCC,EAAMP,EAEZ,GAAMF,aAAiBU,SAAvB,CAKA,GAAID,EAAK,CACP,GAAIH,EAEF,YADA5C,EAAIkC,KAAKe,KAAK,8EAA+EP,GAG/F,GAAY,QAARK,EAEF,YADA/C,EAAIkC,KAAKe,KAAK,8CAA8CT,gBAAmBE,GAKnF5C,OAAOgB,KAAK4B,EAAQ7C,IACjBqB,OAAOC,GACNyB,GAAOD,EAASO,KAAKC,GAAKJ,EAAMI,IAAMhC,EAAIgC,IAAMhC,IAEjDiC,QAAQjC,IACPuB,EAAQW,OAAO,OAAOlC,IAAK,CAACmC,EAAQC,KAClCjB,EAAMkB,KAAKd,EAASvB,EAAGmC,KAErBZ,EAAQ9C,GAAIuB,IACdmB,EAAMkB,KAAKd,EAASvB,GAAG,GAAM,UAxBjCnB,EAAIkC,KAAKe,KAAK,wCAAwCV,iGACYG","file":"js/yarn.vue-match-media.837baf7d.js","sourcesContent":["/* eslint no-unused-vars:0 */\nimport Vue from 'vue'\n\nconst MQ = 'VUE-MATCH-MEDIA-MQ'\nconst MQMAP = 'VUE-MATCH-MEDIA-MQUERIES'\n\nexport default (Vue, options) => {\n  Object.defineProperty(Vue.prototype, '$mq', {\n    get () {\n      return this[MQ]\n    }\n  })\n\n  Vue.mixin({\n    beforeCreate () {\n      const isIsolated = this.$options.mq && this.$options.mq.config && this.$options.mq.config.isolated\n      const isRoot = this === this.$root\n      const inherited = this.$parent && this.$parent[MQMAP]\n      const inheritedKeys = isIsolated || isRoot || !inherited ? [] : Object.keys(inherited)\n\n      if (this.$options.mq) {\n        this[MQMAP] = {}\n\n        const mergedKeys = new Set(inheritedKeys.concat(\n          Object.keys(this.$options.mq)\n            .filter(k => k !== 'config')\n        ))\n\n        const observed = Array.from(mergedKeys)\n          .reduce((obs, k) => {\n            const ownQuery = this.$options.mq[k]\n            const mql = ownQuery ? window.matchMedia(ownQuery) : inherited[k]\n            mql.addListener(e => { obs[k] = e.matches })\n\n            obs[k] = mql.matches\n            this[MQMAP][k] = mql\n            return obs\n          }, {})\n\n        Object.defineProperty(observed, 'all', {\n          enumerable: true,\n          configurable: true,\n          get () {\n            return Object.keys(this)\n              .filter(k => k !== 'all')\n              .filter(k => this[k])\n          }\n        })\n\n        Vue.util.defineReactive(this, MQ, observed)\n      } else if (inherited) {\n        this[MQMAP] = inherited\n        Vue.util.defineReactive(this, MQ, this.$parent[MQ])\n      }\n    }\n  })\n\n  Vue.directive('onmedia', {\n    bind (el, {value, expression, arg, modifiers}, {context}) {\n      const matchers = [...Object.keys(modifiers)]\n      const ANY = !matchers.length || modifiers.any\n      const NOT = arg\n\n      if (!(value instanceof Function)) {\n        Vue.util.warn(`Error binding v-onmedia: expression \"${expression}\" doesn't resolve to\n          a component method, so there's nothing to call back on change`, context)\n        return\n      }\n      if (NOT) {\n        if (ANY) {\n          Vue.util.warn(`Error binding v-onmedia: a \":not\" argument was passed without any modifiers`, context)\n          return\n        }\n        if (NOT !== 'not') {\n          Vue.util.warn(`Error binding v-onmedia: unknown argument \"${arg}\" was passed`, context)\n          return\n        }\n      }\n\n      Object.keys(context[MQMAP])\n        .filter(k =>\n          ANY || matchers.find(m => NOT ? m !== k : m === k)\n        )\n        .forEach(k => {\n          context.$watch(`$mq.${k}`, (newVal, oldVal) => {\n            value.call(context, k, newVal)\n          })\n          if (context[MQ][k]) {\n            value.call(context, k, true, true)\n          }\n        })\n    }\n  })\n}\n"],"sourceRoot":""}