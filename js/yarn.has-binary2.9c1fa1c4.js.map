{"version":3,"sources":["webpack:///./node_modules/has-binary2/index.js","webpack:///./node_modules/has-binary2/node_modules/isarray/index.js"],"names":["isArray","toString","Object","prototype","withNativeBlob","Blob","call","withNativeFile","File","hasBinary","obj","i","l","length","Buffer","isBuffer","ArrayBuffer","toJSON","arguments","key","hasOwnProperty","module","exports","Array","arr"],"mappings":"wGAAA,YAMA,IAAIA,EAAU,EAAQ,QAElBC,EAAWC,OAAOC,UAAUF,SAC5BG,EAAiC,oBAATC,MACY,qBAATA,MAAgD,6BAAxBJ,EAASK,KAAKD,MACjEE,EAAiC,oBAATC,MACY,qBAATA,MAAgD,6BAAxBP,EAASK,KAAKE,MAiBrE,SAASC,EAAWC,GAClB,IAAKA,GAAsB,kBAARA,EACjB,OAAO,EAGT,GAAIV,EAAQU,GAAM,CAChB,IAAK,IAAIC,EAAI,EAAGC,EAAIF,EAAIG,OAAQF,EAAIC,EAAGD,IACrC,GAAIF,EAAUC,EAAIC,IAChB,OAAO,EAGX,OAAO,EAGT,GAAuB,oBAAXG,GAAyBA,EAAOC,UAAYD,EAAOC,SAASL,IAC9C,oBAAhBM,aAA8BN,aAAeM,aACpDZ,GAAkBM,aAAeL,MACjCE,GAAkBG,aAAeF,KAElC,OAAO,EAIT,GAAIE,EAAIO,QAAgC,oBAAfP,EAAIO,QAA8C,IAArBC,UAAUL,OAC9D,OAAOJ,EAAUC,EAAIO,UAAU,GAGjC,IAAK,IAAIE,KAAOT,EACd,GAAIR,OAAOC,UAAUiB,eAAed,KAAKI,EAAKS,IAAQV,EAAUC,EAAIS,IAClE,OAAO,EAIX,OAAO,EA5CTE,EAAOC,QAAUb,I,gDClBjB,IAAIR,EAAW,GAAGA,SAElBoB,EAAOC,QAAUC,MAAMvB,SAAW,SAAUwB,GAC1C,MAA6B,kBAAtBvB,EAASK,KAAKkB","file":"js/yarn.has-binary2.9c1fa1c4.js","sourcesContent":["/* global Blob File */\n\n/*\n * Module requirements.\n */\n\nvar isArray = require('isarray');\n\nvar toString = Object.prototype.toString;\nvar withNativeBlob = typeof Blob === 'function' ||\n                        typeof Blob !== 'undefined' && toString.call(Blob) === '[object BlobConstructor]';\nvar withNativeFile = typeof File === 'function' ||\n                        typeof File !== 'undefined' && toString.call(File) === '[object FileConstructor]';\n\n/**\n * Module exports.\n */\n\nmodule.exports = hasBinary;\n\n/**\n * Checks for binary data.\n *\n * Supports Buffer, ArrayBuffer, Blob and File.\n *\n * @param {Object} anything\n * @api public\n */\n\nfunction hasBinary (obj) {\n  if (!obj || typeof obj !== 'object') {\n    return false;\n  }\n\n  if (isArray(obj)) {\n    for (var i = 0, l = obj.length; i < l; i++) {\n      if (hasBinary(obj[i])) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  if ((typeof Buffer === 'function' && Buffer.isBuffer && Buffer.isBuffer(obj)) ||\n    (typeof ArrayBuffer === 'function' && obj instanceof ArrayBuffer) ||\n    (withNativeBlob && obj instanceof Blob) ||\n    (withNativeFile && obj instanceof File)\n  ) {\n    return true;\n  }\n\n  // see: https://github.com/Automattic/has-binary/pull/4\n  if (obj.toJSON && typeof obj.toJSON === 'function' && arguments.length === 1) {\n    return hasBinary(obj.toJSON(), true);\n  }\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n      return true;\n    }\n  }\n\n  return false;\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n"],"sourceRoot":""}