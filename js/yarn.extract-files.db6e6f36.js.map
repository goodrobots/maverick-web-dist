{"version":3,"sources":["webpack:///./node_modules/extract-files/lib/ReactNativeFile.mjs","webpack:///./node_modules/extract-files/lib/extractFiles.mjs"],"names":["ReactNativeFile","_ref","uri","name","type","this","extractFiles","value","path","clone","files","Map","addFile","paths","file","storedPaths","get","push","apply","set","File","Blob","prefix","FileList","Array","prototype","map","call","i","isArray","child","result","forEach","constructor","Object"],"mappings":"0NAAO,IAAIA,EAAkB,SAAyBC,GACpD,IAAIC,EAAMD,EAAKC,IACbC,EAAOF,EAAKE,KACZC,EAAOH,EAAKG,KACdC,KAAKH,IAAMA,EACXG,KAAKF,KAAOA,EACZE,KAAKD,KAAOA,GCLP,SAASE,EAAaC,EAAOC,GAKlC,IAAIC,OAJS,IAATD,IACFA,EAAO,IAIT,IAAIE,EAAQ,IAAIC,IAEhB,SAASC,EAAQC,EAAOC,GACtB,IAAIC,EAAcL,EAAMM,IAAIF,GACxBC,EAAaA,EAAYE,KAAKC,MAAMH,EAAaF,GAChDH,EAAMS,IAAIL,EAAMD,GAGvB,GACmB,qBAATO,MAAwBb,aAAiBa,MAChC,qBAATC,MAAwBd,aAAiBc,MACjDd,aAAiBP,EAEjBS,EAAQ,KACRG,EAAQ,CAACJ,GAAOD,OACX,CACL,IAAIe,EAASd,EAAOA,EAAO,IAAM,GACjC,GAAwB,qBAAbe,UAA4BhB,aAAiBgB,SACtDd,EAAQe,MAAMC,UAAUC,IAAIC,KAAKpB,GAAO,SAASO,EAAMc,GAErD,OADAhB,EAAQ,CAAC,GAAKU,EAASM,GAAId,GACpB,aAEN,GAAIU,MAAMK,QAAQtB,GACrBE,EAAQF,EAAMmB,KAAI,SAASI,EAAOF,GAChC,IAAIG,EAASzB,EAAawB,EAAO,GAAKR,EAASM,GAE/C,OADAG,EAAOrB,MAAMsB,QAAQpB,GACdmB,EAAOtB,cAEb,GAAIF,GAASA,EAAM0B,cAAgBC,OAGtC,IAAK,IAAIN,KAFTnB,EAAQ,GAEMF,EAAO,CACnB,IAAIwB,EAASzB,EAAaC,EAAMqB,GAAI,GAAKN,EAASM,GAClDG,EAAOrB,MAAMsB,QAAQpB,GACrBH,EAAMmB,GAAKG,EAAOtB,WAEfA,EAAQF,EAGjB,MAAO,CACLE,MAAOA,EACPC,MAAOA","file":"js/yarn.extract-files.db6e6f36.js","sourcesContent":["export var ReactNativeFile = function ReactNativeFile(_ref) {\n  var uri = _ref.uri,\n    name = _ref.name,\n    type = _ref.type\n  this.uri = uri\n  this.name = name\n  this.type = type\n}\n","import { ReactNativeFile } from './ReactNativeFile'\nexport function extractFiles(value, path) {\n  if (path === void 0) {\n    path = ''\n  }\n\n  var clone\n  var files = new Map()\n\n  function addFile(paths, file) {\n    var storedPaths = files.get(file)\n    if (storedPaths) storedPaths.push.apply(storedPaths, paths)\n    else files.set(file, paths)\n  }\n\n  if (\n    (typeof File !== 'undefined' && value instanceof File) ||\n    (typeof Blob !== 'undefined' && value instanceof Blob) ||\n    value instanceof ReactNativeFile\n  ) {\n    clone = null\n    addFile([path], value)\n  } else {\n    var prefix = path ? path + '.' : ''\n    if (typeof FileList !== 'undefined' && value instanceof FileList)\n      clone = Array.prototype.map.call(value, function(file, i) {\n        addFile(['' + prefix + i], file)\n        return null\n      })\n    else if (Array.isArray(value))\n      clone = value.map(function(child, i) {\n        var result = extractFiles(child, '' + prefix + i)\n        result.files.forEach(addFile)\n        return result.clone\n      })\n    else if (value && value.constructor === Object) {\n      clone = {}\n\n      for (var i in value) {\n        var result = extractFiles(value[i], '' + prefix + i)\n        result.files.forEach(addFile)\n        clone[i] = result.clone\n      }\n    } else clone = value\n  }\n\n  return {\n    clone: clone,\n    files: files\n  }\n}\n"],"sourceRoot":""}