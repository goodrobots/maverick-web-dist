{"version":3,"sources":["webpack:///./src/components/modules/config/ConfigDiscovery.vue?fe03","webpack:///src/components/modules/config/ConfigDiscovery.vue","webpack:///./src/components/modules/config/ConfigDiscovery.vue?c851","webpack:///./src/components/modules/config/ConfigDiscovery.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticRenderFns","name","components","data","computed","items","window","location","host","mounted","methods","createConnection","ws","WebSocket","url","onopen","onmessage","service_type","createApi","apis","uuid","logInfo","key","httpEndpoint","wsEndpoint","schemaEndpoint","websocketsOnly","$store","commit","$toast","info","createVideo","state","videostreams","webrtcEndpoint","enabled","action","component"],"mappings":"wHAAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,QAC/FE,EAAkB,GCMtB,G,oBAAA,CACEC,KAAM,kBACNC,WAAY,GAEZC,KAJF,WAKI,MAAO,IAGTC,SAAU,CACRC,MADJ,WAEM,MAAO,CACL,QAAWC,OAAOC,SAASC,QAIjCC,QAfF,aAkBEC,QAAS,CACPC,iBADJ,WACA,WACA,2CAEUC,EAAK,IAAIC,UAAUC,GACvBF,EAAGG,OAAS,WACV,EAAR,+CAEMH,EAAGI,UAAY,SAArB,GACQ,IAAR,qBAEiC,gBAArBb,EAAKc,cACP,EAAV,aAEiC,UAArBd,EAAKc,cACP,EAAV,iBAIIC,UAnBJ,SAmBA,GACM,IAAKvB,KAAKwB,KAAKhB,EAAKiB,OAA8B,gBAArBjB,EAAKc,aAAgC,CAChEtB,KAAK0B,QAAQ,wDAArB,gBACQ,IAAR,GACUC,IAAKnB,EAAKiB,KACV,aAAgBjB,EAAKoB,aACrB,WAAcpB,EAAKqB,WACnB,eAAkBrB,EAAKsB,eACvB,eAAkBtB,EAAKuB,eACvB,KAAQvB,EAAKF,KACb,WAAc,sBACd,UAAa,sBACb,UAAa,MAEfN,KAAKgC,OAAOC,OAAO,cAAe,CAA1C,mBACQjC,KAAKkC,OAAOC,KAAK,sDAAzB,8BAGIC,YArCJ,SAqCA,GACM,IAAKpC,KAAKgC,OAAOK,MAAM7B,KAAK8B,aAAa9B,EAAKiB,OAA8B,UAArBjB,EAAKc,aAA0B,CACpFtB,KAAK0B,QAAQ,sDAArB,gBACQ,IAAR,GACUC,IAAKnB,EAAKiB,KACVnB,KAAME,EAAKF,KACXiC,eAAgB/B,EAAKqB,WACrBW,SAAS,EACTC,OAAQ,SAEVzC,KAAKgC,OAAOC,OAAO,sBAAuB,CAAlD,mBACQjC,KAAKkC,OAAOC,KAAK,oDAAzB,iCCzEwb,I,YCOpbO,EAAY,eACd,EACA5C,EACAO,GACA,EACA,KACA,KACA,MAIa,aAAAqC,E","file":"js/ConfigDiscovery.c8fc962a.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div')}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template lang='pug'>\ndiv\n</template>\n\n<script>\nimport io from \"socket.io-client\";\n\nexport default {\n  name: \"ConfigDiscovery\",\n  components: {\n  },\n  data() {\n    return {\n    }\n  },\n  computed: {\n    items () {\n      return {\n        'default': window.location.host\n      }\n    }\n  },\n  mounted () {\n    // this.createConnection()\n  },\n  methods: {\n    createConnection () {\n      const url = 'ws://' + window.location.hostname + ':1234'\n\n      var ws = new WebSocket(url);\n      ws.onopen = () => {\n        this.logInfo(\"Connected to discovery service: \" + url)\n      }\n      ws.onmessage = (evt) => {\n        const data = JSON.parse(evt.data)\n        // this.logDebug(`Received new discovered service: ${data.name}`)\n        if (data.service_type == \"maverick-api\") {\n          this.createApi(data)\n        }\n        if (data.service_type == \"webrtc\") {\n          this.createVideo(data)\n        }\n      }\n    },\n    createApi (data) {\n      if (!this.apis[data.uuid] && data.service_type == 'maverick-api') {\n        this.logInfo(`Creating new API connection from discovered service: ${data.name}`)\n        let apidata = {\n          key: data.uuid,\n          \"httpEndpoint\": data.httpEndpoint,\n          \"wsEndpoint\": data.wsEndpoint,\n          \"schemaEndpoint\": data.schemaEndpoint,\n          \"websocketsOnly\": data.websocketsOnly,\n          \"name\": data.name,\n          \"colorLight\": \"rgba(166,11,11,0.3)\",\n          \"colorDark\": \"rgba(166,11,11,0.9)\",\n          \"authToken\": null\n        }\n        this.$store.commit('data/addApi', {key: apidata.key, data: apidata})\n        this.$toast.info(`Created new API connection from discovery: <strong>${data.name}</strong>`)\n      }\n    },\n    createVideo (data) {\n      if (!this.$store.state.data.videostreams[data.uuid] && data.service_type == 'webrtc') {\n        this.logInfo(`Creating new Video stream from discovered service: ${data.name}`)\n        let videodata = {\n          key: data.uuid,\n          name: data.name,\n          webrtcEndpoint: data.wsEndpoint,\n          enabled: false,\n          action: 'start'\n        }\n        this.$store.commit('data/addVideoStream', {key: videodata.key, data: videodata})\n        this.$toast.info(`Created new Video Stream from discovery: <strong>${data.name}</strong>`)\n      }\n    }\n  }\n}\n</script>\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/vuetify-loader/lib/loader.js??ref--20-0!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ConfigDiscovery.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/vuetify-loader/lib/loader.js??ref--20-0!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ConfigDiscovery.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ConfigDiscovery.vue?vue&type=template&id=6830b302&lang=pug&\"\nimport script from \"./ConfigDiscovery.vue?vue&type=script&lang=js&\"\nexport * from \"./ConfigDiscovery.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}