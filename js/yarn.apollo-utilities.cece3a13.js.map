{"version":3,"sources":["webpack:///./node_modules/apollo-utilities/lib/bundle.esm.js"],"names":["isScalarValue","value","indexOf","kind","isNumberValue","isStringValue","isBooleanValue","isIntValue","isFloatValue","isVariable","isObjectValue","isListValue","isEnumValue","isNullValue","valueToObjectRepresentation","argObj","name","variables","Number","nestedArgObj_1","fields","map","obj","variableValue","values","listValue","nestedArgArrayObj","storeKeyNameFromField","field","directivesObj","directives","forEach","directive","arguments","_a","length","getStoreKeyName","KNOWN_DIRECTIVES","fieldName","args","filterKeys","sort","queryArgs_1","filteredArgs_1","key","JSON","stringify","completeFieldName","stringifiedArgs","Object","keys","argumentsObjectFromField","argObj_1","resultKeyNameFromField","alias","isField","selection","isInlineFragment","isIdValue","idObject","type","generated","toIdValue","idConfig","id","typename","undefined","isJsonValue","jsonObject","defaultValueFromVariable","node","valueFromNode","onVariable","parseInt","parseFloat","v","_i","getDirectiveInfoFromField","directiveObj_1","shouldInclude","getInclusionDirectives","every","ifArgument","evaledValue","getDirectiveNames","doc","names","Directive","push","hasDirectives","some","hasClientExports","document","isInclusionDirective","filter","directiveArguments","ifValue","getFragmentQueryDocument","fragmentName","actualFragmentName","fragments","definitions","definition","query","operation","selectionSet","selections","assign","target","sources","source","getMutationDefinition","checkDocument","mutationDef","operations","d","getOperationDefinition","getOperationDefinitionOrDie","def","getOperationName","x","getFragmentDefinitions","getQueryDefinition","queryDef","getFragmentDefinition","fragmentDef","getMainDefinition","queryDoc","fragmentDefinition","createFragmentMap","symTable","fragment","getDefaultValues","variableDefinitions","defaultValues","defaultValue","variable","defaultValueObj","apply","variablesInOperation","Set","add","filterInPlace","array","test","context","elem","i","call","this","TYPENAME_FIELD","isEmpty","op","nullIfDocIsEmpty","getDirectiveMatcher","dir","removeDirectivesFromDocument","variablesInUse","create","variablesToRemove","fragmentSpreadsInUse","fragmentSpreadsToRemove","modifiedDoc","Variable","enter","_key","parent","Field","shouldRemoveField","remove","arg","getAllFragmentSpreadsFromSelectionSet","frag","FragmentSpread","removeArgumentsFromDocument","fs","removeFragmentSpreadFromDocument","addTypenameToDocument","SelectionSet","skip","lastIndexOf","connectionRemoveConfig","willRemove","removeConnectionDirectiveFromDocument","hasDirectivesInSelectionSet","nestedCheck","hasDirectivesInSelection","getDirectivesFromDocument","parentPath","_parent","path","currentPath","join","startsWith","selectionsWithDirectives","getArgumentMatcher","config","argument","aConfig","argMatcher","OperationDefinition","varDef","argConfig","argMatchCount_1","Argument","FragmentDefinition","allFragments","buildQueryFromSelectionSet","definitionOperation","removeClientSetsFromDocument","isTypenameOnly","canUseWeakMap","WeakMap","navigator","product","toString","prototype","cloneDeep","cloneDeepHelper","Map","val","seen","has","get","copy_1","slice","set","child","copy_2","getPrototypeOf","getEnv","process","isEnv","env","isProduction","isDevelopment","isTest","tryFunctionOrLogError","f","e","console","error","graphQLResultHasError","result","errors","deepFreeze","o","freeze","getOwnPropertyNames","prop","isFrozen","maybeDeepFreeze","symbolIsPolyfilled","Symbol","hasOwnProperty","mergeDeep","mergeDeepArray","count","pastCopies","shallowCopyForMerge","mergeHelper","isObject","isExtensible","sourceKey","sourceValue","targetValue","Array","isArray","__proto__","haveWarned","warnOnceInDevelopment","msg","warn","stripSymbols","data","parse"],"mappings":"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","file":"js/yarn.apollo-utilities.cece3a13.js","sourcesContent":["import { visit } from 'graphql/language/visitor';\nimport { InvariantError, invariant } from 'ts-invariant';\nimport { __assign, __spreadArrays } from 'tslib';\nimport stringify from 'fast-json-stable-stringify';\nexport { equal as isEqual } from '@wry/equality';\n\nfunction isScalarValue(value) {\n    return ['StringValue', 'BooleanValue', 'EnumValue'].indexOf(value.kind) > -1;\n}\nfunction isNumberValue(value) {\n    return ['IntValue', 'FloatValue'].indexOf(value.kind) > -1;\n}\nfunction isStringValue(value) {\n    return value.kind === 'StringValue';\n}\nfunction isBooleanValue(value) {\n    return value.kind === 'BooleanValue';\n}\nfunction isIntValue(value) {\n    return value.kind === 'IntValue';\n}\nfunction isFloatValue(value) {\n    return value.kind === 'FloatValue';\n}\nfunction isVariable(value) {\n    return value.kind === 'Variable';\n}\nfunction isObjectValue(value) {\n    return value.kind === 'ObjectValue';\n}\nfunction isListValue(value) {\n    return value.kind === 'ListValue';\n}\nfunction isEnumValue(value) {\n    return value.kind === 'EnumValue';\n}\nfunction isNullValue(value) {\n    return value.kind === 'NullValue';\n}\nfunction valueToObjectRepresentation(argObj, name, value, variables) {\n    if (isIntValue(value) || isFloatValue(value)) {\n        argObj[name.value] = Number(value.value);\n    }\n    else if (isBooleanValue(value) || isStringValue(value)) {\n        argObj[name.value] = value.value;\n    }\n    else if (isObjectValue(value)) {\n        var nestedArgObj_1 = {};\n        value.fields.map(function (obj) {\n            return valueToObjectRepresentation(nestedArgObj_1, obj.name, obj.value, variables);\n        });\n        argObj[name.value] = nestedArgObj_1;\n    }\n    else if (isVariable(value)) {\n        var variableValue = (variables || {})[value.name.value];\n        argObj[name.value] = variableValue;\n    }\n    else if (isListValue(value)) {\n        argObj[name.value] = value.values.map(function (listValue) {\n            var nestedArgArrayObj = {};\n            valueToObjectRepresentation(nestedArgArrayObj, name, listValue, variables);\n            return nestedArgArrayObj[name.value];\n        });\n    }\n    else if (isEnumValue(value)) {\n        argObj[name.value] = value.value;\n    }\n    else if (isNullValue(value)) {\n        argObj[name.value] = null;\n    }\n    else {\n        throw process.env.NODE_ENV === \"production\" ? new InvariantError(17) : new InvariantError(\"The inline argument \\\"\" + name.value + \"\\\" of kind \\\"\" + value.kind + \"\\\"\" +\n            'is not supported. Use variables instead of inline arguments to ' +\n            'overcome this limitation.');\n    }\n}\nfunction storeKeyNameFromField(field, variables) {\n    var directivesObj = null;\n    if (field.directives) {\n        directivesObj = {};\n        field.directives.forEach(function (directive) {\n            directivesObj[directive.name.value] = {};\n            if (directive.arguments) {\n                directive.arguments.forEach(function (_a) {\n                    var name = _a.name, value = _a.value;\n                    return valueToObjectRepresentation(directivesObj[directive.name.value], name, value, variables);\n                });\n            }\n        });\n    }\n    var argObj = null;\n    if (field.arguments && field.arguments.length) {\n        argObj = {};\n        field.arguments.forEach(function (_a) {\n            var name = _a.name, value = _a.value;\n            return valueToObjectRepresentation(argObj, name, value, variables);\n        });\n    }\n    return getStoreKeyName(field.name.value, argObj, directivesObj);\n}\nvar KNOWN_DIRECTIVES = [\n    'connection',\n    'include',\n    'skip',\n    'client',\n    'rest',\n    'export',\n];\nfunction getStoreKeyName(fieldName, args, directives) {\n    if (directives &&\n        directives['connection'] &&\n        directives['connection']['key']) {\n        if (directives['connection']['filter'] &&\n            directives['connection']['filter'].length > 0) {\n            var filterKeys = directives['connection']['filter']\n                ? directives['connection']['filter']\n                : [];\n            filterKeys.sort();\n            var queryArgs_1 = args;\n            var filteredArgs_1 = {};\n            filterKeys.forEach(function (key) {\n                filteredArgs_1[key] = queryArgs_1[key];\n            });\n            return directives['connection']['key'] + \"(\" + JSON.stringify(filteredArgs_1) + \")\";\n        }\n        else {\n            return directives['connection']['key'];\n        }\n    }\n    var completeFieldName = fieldName;\n    if (args) {\n        var stringifiedArgs = stringify(args);\n        completeFieldName += \"(\" + stringifiedArgs + \")\";\n    }\n    if (directives) {\n        Object.keys(directives).forEach(function (key) {\n            if (KNOWN_DIRECTIVES.indexOf(key) !== -1)\n                return;\n            if (directives[key] && Object.keys(directives[key]).length) {\n                completeFieldName += \"@\" + key + \"(\" + JSON.stringify(directives[key]) + \")\";\n            }\n            else {\n                completeFieldName += \"@\" + key;\n            }\n        });\n    }\n    return completeFieldName;\n}\nfunction argumentsObjectFromField(field, variables) {\n    if (field.arguments && field.arguments.length) {\n        var argObj_1 = {};\n        field.arguments.forEach(function (_a) {\n            var name = _a.name, value = _a.value;\n            return valueToObjectRepresentation(argObj_1, name, value, variables);\n        });\n        return argObj_1;\n    }\n    return null;\n}\nfunction resultKeyNameFromField(field) {\n    return field.alias ? field.alias.value : field.name.value;\n}\nfunction isField(selection) {\n    return selection.kind === 'Field';\n}\nfunction isInlineFragment(selection) {\n    return selection.kind === 'InlineFragment';\n}\nfunction isIdValue(idObject) {\n    return idObject &&\n        idObject.type === 'id' &&\n        typeof idObject.generated === 'boolean';\n}\nfunction toIdValue(idConfig, generated) {\n    if (generated === void 0) { generated = false; }\n    return __assign({ type: 'id', generated: generated }, (typeof idConfig === 'string'\n        ? { id: idConfig, typename: undefined }\n        : idConfig));\n}\nfunction isJsonValue(jsonObject) {\n    return (jsonObject != null &&\n        typeof jsonObject === 'object' &&\n        jsonObject.type === 'json');\n}\nfunction defaultValueFromVariable(node) {\n    throw process.env.NODE_ENV === \"production\" ? new InvariantError(18) : new InvariantError(\"Variable nodes are not supported by valueFromNode\");\n}\nfunction valueFromNode(node, onVariable) {\n    if (onVariable === void 0) { onVariable = defaultValueFromVariable; }\n    switch (node.kind) {\n        case 'Variable':\n            return onVariable(node);\n        case 'NullValue':\n            return null;\n        case 'IntValue':\n            return parseInt(node.value, 10);\n        case 'FloatValue':\n            return parseFloat(node.value);\n        case 'ListValue':\n            return node.values.map(function (v) { return valueFromNode(v, onVariable); });\n        case 'ObjectValue': {\n            var value = {};\n            for (var _i = 0, _a = node.fields; _i < _a.length; _i++) {\n                var field = _a[_i];\n                value[field.name.value] = valueFromNode(field.value, onVariable);\n            }\n            return value;\n        }\n        default:\n            return node.value;\n    }\n}\n\nfunction getDirectiveInfoFromField(field, variables) {\n    if (field.directives && field.directives.length) {\n        var directiveObj_1 = {};\n        field.directives.forEach(function (directive) {\n            directiveObj_1[directive.name.value] = argumentsObjectFromField(directive, variables);\n        });\n        return directiveObj_1;\n    }\n    return null;\n}\nfunction shouldInclude(selection, variables) {\n    if (variables === void 0) { variables = {}; }\n    return getInclusionDirectives(selection.directives).every(function (_a) {\n        var directive = _a.directive, ifArgument = _a.ifArgument;\n        var evaledValue = false;\n        if (ifArgument.value.kind === 'Variable') {\n            evaledValue = variables[ifArgument.value.name.value];\n            process.env.NODE_ENV === \"production\" ? invariant(evaledValue !== void 0, 1) : invariant(evaledValue !== void 0, \"Invalid variable referenced in @\" + directive.name.value + \" directive.\");\n        }\n        else {\n            evaledValue = ifArgument.value.value;\n        }\n        return directive.name.value === 'skip' ? !evaledValue : evaledValue;\n    });\n}\nfunction getDirectiveNames(doc) {\n    var names = [];\n    visit(doc, {\n        Directive: function (node) {\n            names.push(node.name.value);\n        },\n    });\n    return names;\n}\nfunction hasDirectives(names, doc) {\n    return getDirectiveNames(doc).some(function (name) { return names.indexOf(name) > -1; });\n}\nfunction hasClientExports(document) {\n    return (document &&\n        hasDirectives(['client'], document) &&\n        hasDirectives(['export'], document));\n}\nfunction isInclusionDirective(_a) {\n    var value = _a.name.value;\n    return value === 'skip' || value === 'include';\n}\nfunction getInclusionDirectives(directives) {\n    return directives ? directives.filter(isInclusionDirective).map(function (directive) {\n        var directiveArguments = directive.arguments;\n        var directiveName = directive.name.value;\n        process.env.NODE_ENV === \"production\" ? invariant(directiveArguments && directiveArguments.length === 1, 2) : invariant(directiveArguments && directiveArguments.length === 1, \"Incorrect number of arguments for the @\" + directiveName + \" directive.\");\n        var ifArgument = directiveArguments[0];\n        process.env.NODE_ENV === \"production\" ? invariant(ifArgument.name && ifArgument.name.value === 'if', 3) : invariant(ifArgument.name && ifArgument.name.value === 'if', \"Invalid argument for the @\" + directiveName + \" directive.\");\n        var ifValue = ifArgument.value;\n        process.env.NODE_ENV === \"production\" ? invariant(ifValue &&\n            (ifValue.kind === 'Variable' || ifValue.kind === 'BooleanValue'), 4) : invariant(ifValue &&\n            (ifValue.kind === 'Variable' || ifValue.kind === 'BooleanValue'), \"Argument for the @\" + directiveName + \" directive must be a variable or a boolean value.\");\n        return { directive: directive, ifArgument: ifArgument };\n    }) : [];\n}\n\nfunction getFragmentQueryDocument(document, fragmentName) {\n    var actualFragmentName = fragmentName;\n    var fragments = [];\n    document.definitions.forEach(function (definition) {\n        if (definition.kind === 'OperationDefinition') {\n            throw process.env.NODE_ENV === \"production\" ? new InvariantError(5) : new InvariantError(\"Found a \" + definition.operation + \" operation\" + (definition.name ? \" named '\" + definition.name.value + \"'\" : '') + \". \" +\n                'No operations are allowed when using a fragment as a query. Only fragments are allowed.');\n        }\n        if (definition.kind === 'FragmentDefinition') {\n            fragments.push(definition);\n        }\n    });\n    if (typeof actualFragmentName === 'undefined') {\n        process.env.NODE_ENV === \"production\" ? invariant(fragments.length === 1, 6) : invariant(fragments.length === 1, \"Found \" + fragments.length + \" fragments. `fragmentName` must be provided when there is not exactly 1 fragment.\");\n        actualFragmentName = fragments[0].name.value;\n    }\n    var query = __assign(__assign({}, document), { definitions: __spreadArrays([\n            {\n                kind: 'OperationDefinition',\n                operation: 'query',\n                selectionSet: {\n                    kind: 'SelectionSet',\n                    selections: [\n                        {\n                            kind: 'FragmentSpread',\n                            name: {\n                                kind: 'Name',\n                                value: actualFragmentName,\n                            },\n                        },\n                    ],\n                },\n            }\n        ], document.definitions) });\n    return query;\n}\n\nfunction assign(target) {\n    var sources = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        sources[_i - 1] = arguments[_i];\n    }\n    sources.forEach(function (source) {\n        if (typeof source === 'undefined' || source === null) {\n            return;\n        }\n        Object.keys(source).forEach(function (key) {\n            target[key] = source[key];\n        });\n    });\n    return target;\n}\n\nfunction getMutationDefinition(doc) {\n    checkDocument(doc);\n    var mutationDef = doc.definitions.filter(function (definition) {\n        return definition.kind === 'OperationDefinition' &&\n            definition.operation === 'mutation';\n    })[0];\n    process.env.NODE_ENV === \"production\" ? invariant(mutationDef, 7) : invariant(mutationDef, 'Must contain a mutation definition.');\n    return mutationDef;\n}\nfunction checkDocument(doc) {\n    process.env.NODE_ENV === \"production\" ? invariant(doc && doc.kind === 'Document', 8) : invariant(doc && doc.kind === 'Document', \"Expecting a parsed GraphQL document. Perhaps you need to wrap the query string in a \\\"gql\\\" tag? http://docs.apollostack.com/apollo-client/core.html#gql\");\n    var operations = doc.definitions\n        .filter(function (d) { return d.kind !== 'FragmentDefinition'; })\n        .map(function (definition) {\n        if (definition.kind !== 'OperationDefinition') {\n            throw process.env.NODE_ENV === \"production\" ? new InvariantError(9) : new InvariantError(\"Schema type definitions not allowed in queries. Found: \\\"\" + definition.kind + \"\\\"\");\n        }\n        return definition;\n    });\n    process.env.NODE_ENV === \"production\" ? invariant(operations.length <= 1, 10) : invariant(operations.length <= 1, \"Ambiguous GraphQL document: contains \" + operations.length + \" operations\");\n    return doc;\n}\nfunction getOperationDefinition(doc) {\n    checkDocument(doc);\n    return doc.definitions.filter(function (definition) { return definition.kind === 'OperationDefinition'; })[0];\n}\nfunction getOperationDefinitionOrDie(document) {\n    var def = getOperationDefinition(document);\n    process.env.NODE_ENV === \"production\" ? invariant(def, 11) : invariant(def, \"GraphQL document is missing an operation\");\n    return def;\n}\nfunction getOperationName(doc) {\n    return (doc.definitions\n        .filter(function (definition) {\n        return definition.kind === 'OperationDefinition' && definition.name;\n    })\n        .map(function (x) { return x.name.value; })[0] || null);\n}\nfunction getFragmentDefinitions(doc) {\n    return doc.definitions.filter(function (definition) { return definition.kind === 'FragmentDefinition'; });\n}\nfunction getQueryDefinition(doc) {\n    var queryDef = getOperationDefinition(doc);\n    process.env.NODE_ENV === \"production\" ? invariant(queryDef && queryDef.operation === 'query', 12) : invariant(queryDef && queryDef.operation === 'query', 'Must contain a query definition.');\n    return queryDef;\n}\nfunction getFragmentDefinition(doc) {\n    process.env.NODE_ENV === \"production\" ? invariant(doc.kind === 'Document', 13) : invariant(doc.kind === 'Document', \"Expecting a parsed GraphQL document. Perhaps you need to wrap the query string in a \\\"gql\\\" tag? http://docs.apollostack.com/apollo-client/core.html#gql\");\n    process.env.NODE_ENV === \"production\" ? invariant(doc.definitions.length <= 1, 14) : invariant(doc.definitions.length <= 1, 'Fragment must have exactly one definition.');\n    var fragmentDef = doc.definitions[0];\n    process.env.NODE_ENV === \"production\" ? invariant(fragmentDef.kind === 'FragmentDefinition', 15) : invariant(fragmentDef.kind === 'FragmentDefinition', 'Must be a fragment definition.');\n    return fragmentDef;\n}\nfunction getMainDefinition(queryDoc) {\n    checkDocument(queryDoc);\n    var fragmentDefinition;\n    for (var _i = 0, _a = queryDoc.definitions; _i < _a.length; _i++) {\n        var definition = _a[_i];\n        if (definition.kind === 'OperationDefinition') {\n            var operation = definition.operation;\n            if (operation === 'query' ||\n                operation === 'mutation' ||\n                operation === 'subscription') {\n                return definition;\n            }\n        }\n        if (definition.kind === 'FragmentDefinition' && !fragmentDefinition) {\n            fragmentDefinition = definition;\n        }\n    }\n    if (fragmentDefinition) {\n        return fragmentDefinition;\n    }\n    throw process.env.NODE_ENV === \"production\" ? new InvariantError(16) : new InvariantError('Expected a parsed GraphQL query with a query, mutation, subscription, or a fragment.');\n}\nfunction createFragmentMap(fragments) {\n    if (fragments === void 0) { fragments = []; }\n    var symTable = {};\n    fragments.forEach(function (fragment) {\n        symTable[fragment.name.value] = fragment;\n    });\n    return symTable;\n}\nfunction getDefaultValues(definition) {\n    if (definition &&\n        definition.variableDefinitions &&\n        definition.variableDefinitions.length) {\n        var defaultValues = definition.variableDefinitions\n            .filter(function (_a) {\n            var defaultValue = _a.defaultValue;\n            return defaultValue;\n        })\n            .map(function (_a) {\n            var variable = _a.variable, defaultValue = _a.defaultValue;\n            var defaultValueObj = {};\n            valueToObjectRepresentation(defaultValueObj, variable.name, defaultValue);\n            return defaultValueObj;\n        });\n        return assign.apply(void 0, __spreadArrays([{}], defaultValues));\n    }\n    return {};\n}\nfunction variablesInOperation(operation) {\n    var names = new Set();\n    if (operation.variableDefinitions) {\n        for (var _i = 0, _a = operation.variableDefinitions; _i < _a.length; _i++) {\n            var definition = _a[_i];\n            names.add(definition.variable.name.value);\n        }\n    }\n    return names;\n}\n\nfunction filterInPlace(array, test, context) {\n    var target = 0;\n    array.forEach(function (elem, i) {\n        if (test.call(this, elem, i, array)) {\n            array[target++] = elem;\n        }\n    }, context);\n    array.length = target;\n    return array;\n}\n\nvar TYPENAME_FIELD = {\n    kind: 'Field',\n    name: {\n        kind: 'Name',\n        value: '__typename',\n    },\n};\nfunction isEmpty(op, fragments) {\n    return op.selectionSet.selections.every(function (selection) {\n        return selection.kind === 'FragmentSpread' &&\n            isEmpty(fragments[selection.name.value], fragments);\n    });\n}\nfunction nullIfDocIsEmpty(doc) {\n    return isEmpty(getOperationDefinition(doc) || getFragmentDefinition(doc), createFragmentMap(getFragmentDefinitions(doc)))\n        ? null\n        : doc;\n}\nfunction getDirectiveMatcher(directives) {\n    return function directiveMatcher(directive) {\n        return directives.some(function (dir) {\n            return (dir.name && dir.name === directive.name.value) ||\n                (dir.test && dir.test(directive));\n        });\n    };\n}\nfunction removeDirectivesFromDocument(directives, doc) {\n    var variablesInUse = Object.create(null);\n    var variablesToRemove = [];\n    var fragmentSpreadsInUse = Object.create(null);\n    var fragmentSpreadsToRemove = [];\n    var modifiedDoc = nullIfDocIsEmpty(visit(doc, {\n        Variable: {\n            enter: function (node, _key, parent) {\n                if (parent.kind !== 'VariableDefinition') {\n                    variablesInUse[node.name.value] = true;\n                }\n            },\n        },\n        Field: {\n            enter: function (node) {\n                if (directives && node.directives) {\n                    var shouldRemoveField = directives.some(function (directive) { return directive.remove; });\n                    if (shouldRemoveField &&\n                        node.directives &&\n                        node.directives.some(getDirectiveMatcher(directives))) {\n                        if (node.arguments) {\n                            node.arguments.forEach(function (arg) {\n                                if (arg.value.kind === 'Variable') {\n                                    variablesToRemove.push({\n                                        name: arg.value.name.value,\n                                    });\n                                }\n                            });\n                        }\n                        if (node.selectionSet) {\n                            getAllFragmentSpreadsFromSelectionSet(node.selectionSet).forEach(function (frag) {\n                                fragmentSpreadsToRemove.push({\n                                    name: frag.name.value,\n                                });\n                            });\n                        }\n                        return null;\n                    }\n                }\n            },\n        },\n        FragmentSpread: {\n            enter: function (node) {\n                fragmentSpreadsInUse[node.name.value] = true;\n            },\n        },\n        Directive: {\n            enter: function (node) {\n                if (getDirectiveMatcher(directives)(node)) {\n                    return null;\n                }\n            },\n        },\n    }));\n    if (modifiedDoc &&\n        filterInPlace(variablesToRemove, function (v) { return !variablesInUse[v.name]; }).length) {\n        modifiedDoc = removeArgumentsFromDocument(variablesToRemove, modifiedDoc);\n    }\n    if (modifiedDoc &&\n        filterInPlace(fragmentSpreadsToRemove, function (fs) { return !fragmentSpreadsInUse[fs.name]; })\n            .length) {\n        modifiedDoc = removeFragmentSpreadFromDocument(fragmentSpreadsToRemove, modifiedDoc);\n    }\n    return modifiedDoc;\n}\nfunction addTypenameToDocument(doc) {\n    return visit(checkDocument(doc), {\n        SelectionSet: {\n            enter: function (node, _key, parent) {\n                if (parent &&\n                    parent.kind === 'OperationDefinition') {\n                    return;\n                }\n                var selections = node.selections;\n                if (!selections) {\n                    return;\n                }\n                var skip = selections.some(function (selection) {\n                    return (isField(selection) &&\n                        (selection.name.value === '__typename' ||\n                            selection.name.value.lastIndexOf('__', 0) === 0));\n                });\n                if (skip) {\n                    return;\n                }\n                var field = parent;\n                if (isField(field) &&\n                    field.directives &&\n                    field.directives.some(function (d) { return d.name.value === 'export'; })) {\n                    return;\n                }\n                return __assign(__assign({}, node), { selections: __spreadArrays(selections, [TYPENAME_FIELD]) });\n            },\n        },\n    });\n}\nvar connectionRemoveConfig = {\n    test: function (directive) {\n        var willRemove = directive.name.value === 'connection';\n        if (willRemove) {\n            if (!directive.arguments ||\n                !directive.arguments.some(function (arg) { return arg.name.value === 'key'; })) {\n                process.env.NODE_ENV === \"production\" || invariant.warn('Removing an @connection directive even though it does not have a key. ' +\n                    'You may want to use the key parameter to specify a store key.');\n            }\n        }\n        return willRemove;\n    },\n};\nfunction removeConnectionDirectiveFromDocument(doc) {\n    return removeDirectivesFromDocument([connectionRemoveConfig], checkDocument(doc));\n}\nfunction hasDirectivesInSelectionSet(directives, selectionSet, nestedCheck) {\n    if (nestedCheck === void 0) { nestedCheck = true; }\n    return (selectionSet &&\n        selectionSet.selections &&\n        selectionSet.selections.some(function (selection) {\n            return hasDirectivesInSelection(directives, selection, nestedCheck);\n        }));\n}\nfunction hasDirectivesInSelection(directives, selection, nestedCheck) {\n    if (nestedCheck === void 0) { nestedCheck = true; }\n    if (!isField(selection)) {\n        return true;\n    }\n    if (!selection.directives) {\n        return false;\n    }\n    return (selection.directives.some(getDirectiveMatcher(directives)) ||\n        (nestedCheck &&\n            hasDirectivesInSelectionSet(directives, selection.selectionSet, nestedCheck)));\n}\nfunction getDirectivesFromDocument(directives, doc) {\n    checkDocument(doc);\n    var parentPath;\n    return nullIfDocIsEmpty(visit(doc, {\n        SelectionSet: {\n            enter: function (node, _key, _parent, path) {\n                var currentPath = path.join('-');\n                if (!parentPath ||\n                    currentPath === parentPath ||\n                    !currentPath.startsWith(parentPath)) {\n                    if (node.selections) {\n                        var selectionsWithDirectives = node.selections.filter(function (selection) { return hasDirectivesInSelection(directives, selection); });\n                        if (hasDirectivesInSelectionSet(directives, node, false)) {\n                            parentPath = currentPath;\n                        }\n                        return __assign(__assign({}, node), { selections: selectionsWithDirectives });\n                    }\n                    else {\n                        return null;\n                    }\n                }\n            },\n        },\n    }));\n}\nfunction getArgumentMatcher(config) {\n    return function argumentMatcher(argument) {\n        return config.some(function (aConfig) {\n            return argument.value &&\n                argument.value.kind === 'Variable' &&\n                argument.value.name &&\n                (aConfig.name === argument.value.name.value ||\n                    (aConfig.test && aConfig.test(argument)));\n        });\n    };\n}\nfunction removeArgumentsFromDocument(config, doc) {\n    var argMatcher = getArgumentMatcher(config);\n    return nullIfDocIsEmpty(visit(doc, {\n        OperationDefinition: {\n            enter: function (node) {\n                return __assign(__assign({}, node), { variableDefinitions: node.variableDefinitions.filter(function (varDef) {\n                        return !config.some(function (arg) { return arg.name === varDef.variable.name.value; });\n                    }) });\n            },\n        },\n        Field: {\n            enter: function (node) {\n                var shouldRemoveField = config.some(function (argConfig) { return argConfig.remove; });\n                if (shouldRemoveField) {\n                    var argMatchCount_1 = 0;\n                    node.arguments.forEach(function (arg) {\n                        if (argMatcher(arg)) {\n                            argMatchCount_1 += 1;\n                        }\n                    });\n                    if (argMatchCount_1 === 1) {\n                        return null;\n                    }\n                }\n            },\n        },\n        Argument: {\n            enter: function (node) {\n                if (argMatcher(node)) {\n                    return null;\n                }\n            },\n        },\n    }));\n}\nfunction removeFragmentSpreadFromDocument(config, doc) {\n    function enter(node) {\n        if (config.some(function (def) { return def.name === node.name.value; })) {\n            return null;\n        }\n    }\n    return nullIfDocIsEmpty(visit(doc, {\n        FragmentSpread: { enter: enter },\n        FragmentDefinition: { enter: enter },\n    }));\n}\nfunction getAllFragmentSpreadsFromSelectionSet(selectionSet) {\n    var allFragments = [];\n    selectionSet.selections.forEach(function (selection) {\n        if ((isField(selection) || isInlineFragment(selection)) &&\n            selection.selectionSet) {\n            getAllFragmentSpreadsFromSelectionSet(selection.selectionSet).forEach(function (frag) { return allFragments.push(frag); });\n        }\n        else if (selection.kind === 'FragmentSpread') {\n            allFragments.push(selection);\n        }\n    });\n    return allFragments;\n}\nfunction buildQueryFromSelectionSet(document) {\n    var definition = getMainDefinition(document);\n    var definitionOperation = definition.operation;\n    if (definitionOperation === 'query') {\n        return document;\n    }\n    var modifiedDoc = visit(document, {\n        OperationDefinition: {\n            enter: function (node) {\n                return __assign(__assign({}, node), { operation: 'query' });\n            },\n        },\n    });\n    return modifiedDoc;\n}\nfunction removeClientSetsFromDocument(document) {\n    checkDocument(document);\n    var modifiedDoc = removeDirectivesFromDocument([\n        {\n            test: function (directive) { return directive.name.value === 'client'; },\n            remove: true,\n        },\n    ], document);\n    if (modifiedDoc) {\n        modifiedDoc = visit(modifiedDoc, {\n            FragmentDefinition: {\n                enter: function (node) {\n                    if (node.selectionSet) {\n                        var isTypenameOnly = node.selectionSet.selections.every(function (selection) {\n                            return isField(selection) && selection.name.value === '__typename';\n                        });\n                        if (isTypenameOnly) {\n                            return null;\n                        }\n                    }\n                },\n            },\n        });\n    }\n    return modifiedDoc;\n}\n\nvar canUseWeakMap = typeof WeakMap === 'function' && !(typeof navigator === 'object' &&\n    navigator.product === 'ReactNative');\n\nvar toString = Object.prototype.toString;\nfunction cloneDeep(value) {\n    return cloneDeepHelper(value, new Map());\n}\nfunction cloneDeepHelper(val, seen) {\n    switch (toString.call(val)) {\n        case \"[object Array]\": {\n            if (seen.has(val))\n                return seen.get(val);\n            var copy_1 = val.slice(0);\n            seen.set(val, copy_1);\n            copy_1.forEach(function (child, i) {\n                copy_1[i] = cloneDeepHelper(child, seen);\n            });\n            return copy_1;\n        }\n        case \"[object Object]\": {\n            if (seen.has(val))\n                return seen.get(val);\n            var copy_2 = Object.create(Object.getPrototypeOf(val));\n            seen.set(val, copy_2);\n            Object.keys(val).forEach(function (key) {\n                copy_2[key] = cloneDeepHelper(val[key], seen);\n            });\n            return copy_2;\n        }\n        default:\n            return val;\n    }\n}\n\nfunction getEnv() {\n    if (typeof process !== 'undefined' && process.env.NODE_ENV) {\n        return process.env.NODE_ENV;\n    }\n    return 'development';\n}\nfunction isEnv(env) {\n    return getEnv() === env;\n}\nfunction isProduction() {\n    return isEnv('production') === true;\n}\nfunction isDevelopment() {\n    return isEnv('development') === true;\n}\nfunction isTest() {\n    return isEnv('test') === true;\n}\n\nfunction tryFunctionOrLogError(f) {\n    try {\n        return f();\n    }\n    catch (e) {\n        if (console.error) {\n            console.error(e);\n        }\n    }\n}\nfunction graphQLResultHasError(result) {\n    return result.errors && result.errors.length;\n}\n\nfunction deepFreeze(o) {\n    Object.freeze(o);\n    Object.getOwnPropertyNames(o).forEach(function (prop) {\n        if (o[prop] !== null &&\n            (typeof o[prop] === 'object' || typeof o[prop] === 'function') &&\n            !Object.isFrozen(o[prop])) {\n            deepFreeze(o[prop]);\n        }\n    });\n    return o;\n}\nfunction maybeDeepFreeze(obj) {\n    if (isDevelopment() || isTest()) {\n        var symbolIsPolyfilled = typeof Symbol === 'function' && typeof Symbol('') === 'string';\n        if (!symbolIsPolyfilled) {\n            return deepFreeze(obj);\n        }\n    }\n    return obj;\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction mergeDeep() {\n    var sources = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        sources[_i] = arguments[_i];\n    }\n    return mergeDeepArray(sources);\n}\nfunction mergeDeepArray(sources) {\n    var target = sources[0] || {};\n    var count = sources.length;\n    if (count > 1) {\n        var pastCopies = [];\n        target = shallowCopyForMerge(target, pastCopies);\n        for (var i = 1; i < count; ++i) {\n            target = mergeHelper(target, sources[i], pastCopies);\n        }\n    }\n    return target;\n}\nfunction isObject(obj) {\n    return obj !== null && typeof obj === 'object';\n}\nfunction mergeHelper(target, source, pastCopies) {\n    if (isObject(source) && isObject(target)) {\n        if (Object.isExtensible && !Object.isExtensible(target)) {\n            target = shallowCopyForMerge(target, pastCopies);\n        }\n        Object.keys(source).forEach(function (sourceKey) {\n            var sourceValue = source[sourceKey];\n            if (hasOwnProperty.call(target, sourceKey)) {\n                var targetValue = target[sourceKey];\n                if (sourceValue !== targetValue) {\n                    target[sourceKey] = mergeHelper(shallowCopyForMerge(targetValue, pastCopies), sourceValue, pastCopies);\n                }\n            }\n            else {\n                target[sourceKey] = sourceValue;\n            }\n        });\n        return target;\n    }\n    return source;\n}\nfunction shallowCopyForMerge(value, pastCopies) {\n    if (value !== null &&\n        typeof value === 'object' &&\n        pastCopies.indexOf(value) < 0) {\n        if (Array.isArray(value)) {\n            value = value.slice(0);\n        }\n        else {\n            value = __assign({ __proto__: Object.getPrototypeOf(value) }, value);\n        }\n        pastCopies.push(value);\n    }\n    return value;\n}\n\nvar haveWarned = Object.create({});\nfunction warnOnceInDevelopment(msg, type) {\n    if (type === void 0) { type = 'warn'; }\n    if (!isProduction() && !haveWarned[msg]) {\n        if (!isTest()) {\n            haveWarned[msg] = true;\n        }\n        if (type === 'error') {\n            console.error(msg);\n        }\n        else {\n            console.warn(msg);\n        }\n    }\n}\n\nfunction stripSymbols(data) {\n    return JSON.parse(JSON.stringify(data));\n}\n\nexport { addTypenameToDocument, argumentsObjectFromField, assign, buildQueryFromSelectionSet, canUseWeakMap, checkDocument, cloneDeep, createFragmentMap, getDefaultValues, getDirectiveInfoFromField, getDirectiveNames, getDirectivesFromDocument, getEnv, getFragmentDefinition, getFragmentDefinitions, getFragmentQueryDocument, getInclusionDirectives, getMainDefinition, getMutationDefinition, getOperationDefinition, getOperationDefinitionOrDie, getOperationName, getQueryDefinition, getStoreKeyName, graphQLResultHasError, hasClientExports, hasDirectives, isDevelopment, isEnv, isField, isIdValue, isInlineFragment, isJsonValue, isNumberValue, isProduction, isScalarValue, isTest, maybeDeepFreeze, mergeDeep, mergeDeepArray, removeArgumentsFromDocument, removeClientSetsFromDocument, removeConnectionDirectiveFromDocument, removeDirectivesFromDocument, removeFragmentSpreadFromDocument, resultKeyNameFromField, shouldInclude, storeKeyNameFromField, stripSymbols, toIdValue, tryFunctionOrLogError, valueFromNode, valueToObjectRepresentation, variablesInOperation, warnOnceInDevelopment };\n//# sourceMappingURL=bundle.esm.js.map\n"],"sourceRoot":""}