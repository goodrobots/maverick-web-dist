{"version":3,"sources":["webpack:///./node_modules/zen-observable/index.js","webpack:///./node_modules/zen-observable/lib/Observable.js"],"names":["module","exports","Observable","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","prototype","value","hasSymbols","Symbol","hasSymbol","name","Boolean","getSymbol","observable","SymbolIterator","SymbolObservable","SymbolSpecies","getMethod","obj","getSpecies","ctor","constructor","undefined","isObservable","x","hostReportError","e","log","setTimeout","enqueue","fn","Promise","resolve","then","cleanupSubscription","subscription","cleanup","_cleanup","unsubscribe","call","closeSubscription","_observer","_queue","_state","flushSubscription","queue","notifySubscription","type","observer","m","onNotify","push","Subscription","subscriber","this","subscriptionObserver","SubscriptionObserver","error","get","_subscription","_subscriber","next","arguments","complete","_this","reject","subscribe","done","_this2","C","_this3","_this4","hasSeed","hasValue","seed","acc","first","_this5","_len","sources","Array","_key","index","startNext","v","from","_this6","subscriptions","outer","inner","indexOf","splice","completeIfDone","closed","forEach","s","method","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","iterator","_item","err","return","isArray","_len2","items","_key2","symbol"],"mappings":"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","file":"js/yarn.zen-observable.d08bf701.js","sourcesContent":["module.exports = require('./lib/Observable.js').Observable;\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Observable = void 0;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n// === Symbol Support ===\nvar hasSymbols = function () {\n  return typeof Symbol === 'function';\n};\n\nvar hasSymbol = function (name) {\n  return hasSymbols() && Boolean(Symbol[name]);\n};\n\nvar getSymbol = function (name) {\n  return hasSymbol(name) ? Symbol[name] : '@@' + name;\n};\n\nif (hasSymbols() && !hasSymbol('observable')) {\n  Symbol.observable = Symbol('observable');\n}\n\nvar SymbolIterator = getSymbol('iterator');\nvar SymbolObservable = getSymbol('observable');\nvar SymbolSpecies = getSymbol('species'); // === Abstract Operations ===\n\nfunction getMethod(obj, key) {\n  var value = obj[key];\n  if (value == null) return undefined;\n  if (typeof value !== 'function') throw new TypeError(value + ' is not a function');\n  return value;\n}\n\nfunction getSpecies(obj) {\n  var ctor = obj.constructor;\n\n  if (ctor !== undefined) {\n    ctor = ctor[SymbolSpecies];\n\n    if (ctor === null) {\n      ctor = undefined;\n    }\n  }\n\n  return ctor !== undefined ? ctor : Observable;\n}\n\nfunction isObservable(x) {\n  return x instanceof Observable; // SPEC: Brand check\n}\n\nfunction hostReportError(e) {\n  if (hostReportError.log) {\n    hostReportError.log(e);\n  } else {\n    setTimeout(function () {\n      throw e;\n    });\n  }\n}\n\nfunction enqueue(fn) {\n  Promise.resolve().then(function () {\n    try {\n      fn();\n    } catch (e) {\n      hostReportError(e);\n    }\n  });\n}\n\nfunction cleanupSubscription(subscription) {\n  var cleanup = subscription._cleanup;\n  if (cleanup === undefined) return;\n  subscription._cleanup = undefined;\n\n  if (!cleanup) {\n    return;\n  }\n\n  try {\n    if (typeof cleanup === 'function') {\n      cleanup();\n    } else {\n      var unsubscribe = getMethod(cleanup, 'unsubscribe');\n\n      if (unsubscribe) {\n        unsubscribe.call(cleanup);\n      }\n    }\n  } catch (e) {\n    hostReportError(e);\n  }\n}\n\nfunction closeSubscription(subscription) {\n  subscription._observer = undefined;\n  subscription._queue = undefined;\n  subscription._state = 'closed';\n}\n\nfunction flushSubscription(subscription) {\n  var queue = subscription._queue;\n\n  if (!queue) {\n    return;\n  }\n\n  subscription._queue = undefined;\n  subscription._state = 'ready';\n\n  for (var i = 0; i < queue.length; ++i) {\n    notifySubscription(subscription, queue[i].type, queue[i].value);\n    if (subscription._state === 'closed') break;\n  }\n}\n\nfunction notifySubscription(subscription, type, value) {\n  subscription._state = 'running';\n  var observer = subscription._observer;\n\n  try {\n    var m = getMethod(observer, type);\n\n    switch (type) {\n      case 'next':\n        if (m) m.call(observer, value);\n        break;\n\n      case 'error':\n        closeSubscription(subscription);\n        if (m) m.call(observer, value);else throw value;\n        break;\n\n      case 'complete':\n        closeSubscription(subscription);\n        if (m) m.call(observer);\n        break;\n    }\n  } catch (e) {\n    hostReportError(e);\n  }\n\n  if (subscription._state === 'closed') cleanupSubscription(subscription);else if (subscription._state === 'running') subscription._state = 'ready';\n}\n\nfunction onNotify(subscription, type, value) {\n  if (subscription._state === 'closed') return;\n\n  if (subscription._state === 'buffering') {\n    subscription._queue.push({\n      type: type,\n      value: value\n    });\n\n    return;\n  }\n\n  if (subscription._state !== 'ready') {\n    subscription._state = 'buffering';\n    subscription._queue = [{\n      type: type,\n      value: value\n    }];\n    enqueue(function () {\n      return flushSubscription(subscription);\n    });\n    return;\n  }\n\n  notifySubscription(subscription, type, value);\n}\n\nvar Subscription =\n/*#__PURE__*/\nfunction () {\n  function Subscription(observer, subscriber) {\n    _classCallCheck(this, Subscription);\n\n    // ASSERT: observer is an object\n    // ASSERT: subscriber is callable\n    this._cleanup = undefined;\n    this._observer = observer;\n    this._queue = undefined;\n    this._state = 'initializing';\n    var subscriptionObserver = new SubscriptionObserver(this);\n\n    try {\n      this._cleanup = subscriber.call(undefined, subscriptionObserver);\n    } catch (e) {\n      subscriptionObserver.error(e);\n    }\n\n    if (this._state === 'initializing') this._state = 'ready';\n  }\n\n  _createClass(Subscription, [{\n    key: \"unsubscribe\",\n    value: function unsubscribe() {\n      if (this._state !== 'closed') {\n        closeSubscription(this);\n        cleanupSubscription(this);\n      }\n    }\n  }, {\n    key: \"closed\",\n    get: function () {\n      return this._state === 'closed';\n    }\n  }]);\n\n  return Subscription;\n}();\n\nvar SubscriptionObserver =\n/*#__PURE__*/\nfunction () {\n  function SubscriptionObserver(subscription) {\n    _classCallCheck(this, SubscriptionObserver);\n\n    this._subscription = subscription;\n  }\n\n  _createClass(SubscriptionObserver, [{\n    key: \"next\",\n    value: function next(value) {\n      onNotify(this._subscription, 'next', value);\n    }\n  }, {\n    key: \"error\",\n    value: function error(value) {\n      onNotify(this._subscription, 'error', value);\n    }\n  }, {\n    key: \"complete\",\n    value: function complete() {\n      onNotify(this._subscription, 'complete');\n    }\n  }, {\n    key: \"closed\",\n    get: function () {\n      return this._subscription._state === 'closed';\n    }\n  }]);\n\n  return SubscriptionObserver;\n}();\n\nvar Observable =\n/*#__PURE__*/\nfunction () {\n  function Observable(subscriber) {\n    _classCallCheck(this, Observable);\n\n    if (!(this instanceof Observable)) throw new TypeError('Observable cannot be called as a function');\n    if (typeof subscriber !== 'function') throw new TypeError('Observable initializer must be a function');\n    this._subscriber = subscriber;\n  }\n\n  _createClass(Observable, [{\n    key: \"subscribe\",\n    value: function subscribe(observer) {\n      if (typeof observer !== 'object' || observer === null) {\n        observer = {\n          next: observer,\n          error: arguments[1],\n          complete: arguments[2]\n        };\n      }\n\n      return new Subscription(observer, this._subscriber);\n    }\n  }, {\n    key: \"forEach\",\n    value: function forEach(fn) {\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        if (typeof fn !== 'function') {\n          reject(new TypeError(fn + ' is not a function'));\n          return;\n        }\n\n        function done() {\n          subscription.unsubscribe();\n          resolve();\n        }\n\n        var subscription = _this.subscribe({\n          next: function (value) {\n            try {\n              fn(value, done);\n            } catch (e) {\n              reject(e);\n              subscription.unsubscribe();\n            }\n          },\n          error: reject,\n          complete: resolve\n        });\n      });\n    }\n  }, {\n    key: \"map\",\n    value: function map(fn) {\n      var _this2 = this;\n\n      if (typeof fn !== 'function') throw new TypeError(fn + ' is not a function');\n      var C = getSpecies(this);\n      return new C(function (observer) {\n        return _this2.subscribe({\n          next: function (value) {\n            try {\n              value = fn(value);\n            } catch (e) {\n              return observer.error(e);\n            }\n\n            observer.next(value);\n          },\n          error: function (e) {\n            observer.error(e);\n          },\n          complete: function () {\n            observer.complete();\n          }\n        });\n      });\n    }\n  }, {\n    key: \"filter\",\n    value: function filter(fn) {\n      var _this3 = this;\n\n      if (typeof fn !== 'function') throw new TypeError(fn + ' is not a function');\n      var C = getSpecies(this);\n      return new C(function (observer) {\n        return _this3.subscribe({\n          next: function (value) {\n            try {\n              if (!fn(value)) return;\n            } catch (e) {\n              return observer.error(e);\n            }\n\n            observer.next(value);\n          },\n          error: function (e) {\n            observer.error(e);\n          },\n          complete: function () {\n            observer.complete();\n          }\n        });\n      });\n    }\n  }, {\n    key: \"reduce\",\n    value: function reduce(fn) {\n      var _this4 = this;\n\n      if (typeof fn !== 'function') throw new TypeError(fn + ' is not a function');\n      var C = getSpecies(this);\n      var hasSeed = arguments.length > 1;\n      var hasValue = false;\n      var seed = arguments[1];\n      var acc = seed;\n      return new C(function (observer) {\n        return _this4.subscribe({\n          next: function (value) {\n            var first = !hasValue;\n            hasValue = true;\n\n            if (!first || hasSeed) {\n              try {\n                acc = fn(acc, value);\n              } catch (e) {\n                return observer.error(e);\n              }\n            } else {\n              acc = value;\n            }\n          },\n          error: function (e) {\n            observer.error(e);\n          },\n          complete: function () {\n            if (!hasValue && !hasSeed) return observer.error(new TypeError('Cannot reduce an empty sequence'));\n            observer.next(acc);\n            observer.complete();\n          }\n        });\n      });\n    }\n  }, {\n    key: \"concat\",\n    value: function concat() {\n      var _this5 = this;\n\n      for (var _len = arguments.length, sources = new Array(_len), _key = 0; _key < _len; _key++) {\n        sources[_key] = arguments[_key];\n      }\n\n      var C = getSpecies(this);\n      return new C(function (observer) {\n        var subscription;\n        var index = 0;\n\n        function startNext(next) {\n          subscription = next.subscribe({\n            next: function (v) {\n              observer.next(v);\n            },\n            error: function (e) {\n              observer.error(e);\n            },\n            complete: function () {\n              if (index === sources.length) {\n                subscription = undefined;\n                observer.complete();\n              } else {\n                startNext(C.from(sources[index++]));\n              }\n            }\n          });\n        }\n\n        startNext(_this5);\n        return function () {\n          if (subscription) {\n            subscription.unsubscribe();\n            subscription = undefined;\n          }\n        };\n      });\n    }\n  }, {\n    key: \"flatMap\",\n    value: function flatMap(fn) {\n      var _this6 = this;\n\n      if (typeof fn !== 'function') throw new TypeError(fn + ' is not a function');\n      var C = getSpecies(this);\n      return new C(function (observer) {\n        var subscriptions = [];\n\n        var outer = _this6.subscribe({\n          next: function (value) {\n            if (fn) {\n              try {\n                value = fn(value);\n              } catch (e) {\n                return observer.error(e);\n              }\n            }\n\n            var inner = C.from(value).subscribe({\n              next: function (value) {\n                observer.next(value);\n              },\n              error: function (e) {\n                observer.error(e);\n              },\n              complete: function () {\n                var i = subscriptions.indexOf(inner);\n                if (i >= 0) subscriptions.splice(i, 1);\n                completeIfDone();\n              }\n            });\n            subscriptions.push(inner);\n          },\n          error: function (e) {\n            observer.error(e);\n          },\n          complete: function () {\n            completeIfDone();\n          }\n        });\n\n        function completeIfDone() {\n          if (outer.closed && subscriptions.length === 0) observer.complete();\n        }\n\n        return function () {\n          subscriptions.forEach(function (s) {\n            return s.unsubscribe();\n          });\n          outer.unsubscribe();\n        };\n      });\n    }\n  }, {\n    key: SymbolObservable,\n    value: function () {\n      return this;\n    }\n  }], [{\n    key: \"from\",\n    value: function from(x) {\n      var C = typeof this === 'function' ? this : Observable;\n      if (x == null) throw new TypeError(x + ' is not an object');\n      var method = getMethod(x, SymbolObservable);\n\n      if (method) {\n        var observable = method.call(x);\n        if (Object(observable) !== observable) throw new TypeError(observable + ' is not an object');\n        if (isObservable(observable) && observable.constructor === C) return observable;\n        return new C(function (observer) {\n          return observable.subscribe(observer);\n        });\n      }\n\n      if (hasSymbol('iterator')) {\n        method = getMethod(x, SymbolIterator);\n\n        if (method) {\n          return new C(function (observer) {\n            enqueue(function () {\n              if (observer.closed) return;\n              var _iteratorNormalCompletion = true;\n              var _didIteratorError = false;\n              var _iteratorError = undefined;\n\n              try {\n                for (var _iterator = method.call(x)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                  var _item = _step.value;\n                  observer.next(_item);\n                  if (observer.closed) return;\n                }\n              } catch (err) {\n                _didIteratorError = true;\n                _iteratorError = err;\n              } finally {\n                try {\n                  if (!_iteratorNormalCompletion && _iterator.return != null) {\n                    _iterator.return();\n                  }\n                } finally {\n                  if (_didIteratorError) {\n                    throw _iteratorError;\n                  }\n                }\n              }\n\n              observer.complete();\n            });\n          });\n        }\n      }\n\n      if (Array.isArray(x)) {\n        return new C(function (observer) {\n          enqueue(function () {\n            if (observer.closed) return;\n\n            for (var i = 0; i < x.length; ++i) {\n              observer.next(x[i]);\n              if (observer.closed) return;\n            }\n\n            observer.complete();\n          });\n        });\n      }\n\n      throw new TypeError(x + ' is not observable');\n    }\n  }, {\n    key: \"of\",\n    value: function of() {\n      for (var _len2 = arguments.length, items = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        items[_key2] = arguments[_key2];\n      }\n\n      var C = typeof this === 'function' ? this : Observable;\n      return new C(function (observer) {\n        enqueue(function () {\n          if (observer.closed) return;\n\n          for (var i = 0; i < items.length; ++i) {\n            observer.next(items[i]);\n            if (observer.closed) return;\n          }\n\n          observer.complete();\n        });\n      });\n    }\n  }, {\n    key: SymbolSpecies,\n    get: function () {\n      return this;\n    }\n  }]);\n\n  return Observable;\n}();\n\nexports.Observable = Observable;\n\nif (hasSymbols()) {\n  Object.defineProperty(Observable, Symbol('extensions'), {\n    value: {\n      symbol: SymbolObservable,\n      hostReportError: hostReportError\n    },\n    configurable: true\n  });\n}"],"sourceRoot":""}