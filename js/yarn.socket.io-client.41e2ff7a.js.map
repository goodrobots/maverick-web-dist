{"version":3,"sources":["webpack:///./node_modules/socket.io-client/lib/socket.js","webpack:///./node_modules/socket.io-client/lib/manager.js","webpack:///./node_modules/socket.io-client/lib/index.js","webpack:///./node_modules/socket.io-client/lib/url.js","webpack:///./node_modules/socket.io-client/lib/on.js"],"names":["parser","Emitter","toArray","on","bind","debug","parseqs","hasBin","module","exports","Socket","events","connect","connect_error","connect_timeout","connecting","disconnect","error","reconnect","reconnect_attempt","reconnect_failed","reconnect_error","reconnecting","ping","pong","emit","prototype","io","nsp","opts","this","json","ids","acks","receiveBuffer","sendBuffer","connected","disconnected","flags","query","autoConnect","open","subEvents","subs","readyState","onopen","send","args","arguments","unshift","apply","ev","hasOwnProperty","packet","type","undefined","binary","BINARY_EVENT","EVENT","data","options","compress","length","pop","id","push","encode","CONNECT","onclose","reason","onpacket","sameNamespace","rootNamespaceError","ERROR","onconnect","onevent","ACK","onack","BINARY_ACK","DISCONNECT","ondisconnect","ack","self","sent","emitBuffered","i","destroy","close","eio","indexOf","Backoff","has","Object","Manager","uri","path","nsps","reconnection","reconnectionAttempts","Infinity","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","min","max","jitter","timeout","lastPing","encoding","packetBuffer","_parser","encoder","Encoder","decoder","Decoder","emitAll","call","updateSocketIds","generateId","engine","v","_reconnection","_reconnectionAttempts","_reconnectionDelay","setMin","_randomizationFactor","setJitter","_reconnectionDelayMax","setMax","_timeout","maybeReconnectOnOpen","attempts","fn","socket","skipReconnect","openSub","errorSub","cleanup","err","Error","timer","setTimeout","clearTimeout","onping","Date","onpong","ondata","add","ondecoded","onerror","onConnecting","index","splice","encodedPackets","write","processPacketQueue","pack","shift","subsLength","sub","reset","delay","duration","onreconnect","attempt","url","lookup","cache","managers","parsed","source","newConnection","forceNew","multiplex","protocol","parseuri","loc","obj","location","host","charAt","test","port","ipv6","href","removeListener"],"mappings":"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","file":"js/yarn.socket.io-client.41e2ff7a.js","sourcesContent":["\n/**\n * Module dependencies.\n */\n\nvar parser = require('socket.io-parser');\nvar Emitter = require('component-emitter');\nvar toArray = require('to-array');\nvar on = require('./on');\nvar bind = require('component-bind');\nvar debug = require('debug')('socket.io-client:socket');\nvar parseqs = require('parseqs');\nvar hasBin = require('has-binary2');\n\n/**\n * Module exports.\n */\n\nmodule.exports = exports = Socket;\n\n/**\n * Internal events (blacklisted).\n * These events can't be emitted by the user.\n *\n * @api private\n */\n\nvar events = {\n  connect: 1,\n  connect_error: 1,\n  connect_timeout: 1,\n  connecting: 1,\n  disconnect: 1,\n  error: 1,\n  reconnect: 1,\n  reconnect_attempt: 1,\n  reconnect_failed: 1,\n  reconnect_error: 1,\n  reconnecting: 1,\n  ping: 1,\n  pong: 1\n};\n\n/**\n * Shortcut to `Emitter#emit`.\n */\n\nvar emit = Emitter.prototype.emit;\n\n/**\n * `Socket` constructor.\n *\n * @api public\n */\n\nfunction Socket (io, nsp, opts) {\n  this.io = io;\n  this.nsp = nsp;\n  this.json = this; // compat\n  this.ids = 0;\n  this.acks = {};\n  this.receiveBuffer = [];\n  this.sendBuffer = [];\n  this.connected = false;\n  this.disconnected = true;\n  this.flags = {};\n  if (opts && opts.query) {\n    this.query = opts.query;\n  }\n  if (this.io.autoConnect) this.open();\n}\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Socket.prototype);\n\n/**\n * Subscribe to open, close and packet events\n *\n * @api private\n */\n\nSocket.prototype.subEvents = function () {\n  if (this.subs) return;\n\n  var io = this.io;\n  this.subs = [\n    on(io, 'open', bind(this, 'onopen')),\n    on(io, 'packet', bind(this, 'onpacket')),\n    on(io, 'close', bind(this, 'onclose'))\n  ];\n};\n\n/**\n * \"Opens\" the socket.\n *\n * @api public\n */\n\nSocket.prototype.open =\nSocket.prototype.connect = function () {\n  if (this.connected) return this;\n\n  this.subEvents();\n  this.io.open(); // ensure open\n  if ('open' === this.io.readyState) this.onopen();\n  this.emit('connecting');\n  return this;\n};\n\n/**\n * Sends a `message` event.\n *\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.send = function () {\n  var args = toArray(arguments);\n  args.unshift('message');\n  this.emit.apply(this, args);\n  return this;\n};\n\n/**\n * Override `emit`.\n * If the event is in `events`, it's emitted normally.\n *\n * @param {String} event name\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.emit = function (ev) {\n  if (events.hasOwnProperty(ev)) {\n    emit.apply(this, arguments);\n    return this;\n  }\n\n  var args = toArray(arguments);\n  var packet = {\n    type: (this.flags.binary !== undefined ? this.flags.binary : hasBin(args)) ? parser.BINARY_EVENT : parser.EVENT,\n    data: args\n  };\n\n  packet.options = {};\n  packet.options.compress = !this.flags || false !== this.flags.compress;\n\n  // event ack callback\n  if ('function' === typeof args[args.length - 1]) {\n    debug('emitting packet with ack id %d', this.ids);\n    this.acks[this.ids] = args.pop();\n    packet.id = this.ids++;\n  }\n\n  if (this.connected) {\n    this.packet(packet);\n  } else {\n    this.sendBuffer.push(packet);\n  }\n\n  this.flags = {};\n\n  return this;\n};\n\n/**\n * Sends a packet.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.packet = function (packet) {\n  packet.nsp = this.nsp;\n  this.io.packet(packet);\n};\n\n/**\n * Called upon engine `open`.\n *\n * @api private\n */\n\nSocket.prototype.onopen = function () {\n  debug('transport is open - connecting');\n\n  // write connect packet if necessary\n  if ('/' !== this.nsp) {\n    if (this.query) {\n      var query = typeof this.query === 'object' ? parseqs.encode(this.query) : this.query;\n      debug('sending connect packet with query %s', query);\n      this.packet({type: parser.CONNECT, query: query});\n    } else {\n      this.packet({type: parser.CONNECT});\n    }\n  }\n};\n\n/**\n * Called upon engine `close`.\n *\n * @param {String} reason\n * @api private\n */\n\nSocket.prototype.onclose = function (reason) {\n  debug('close (%s)', reason);\n  this.connected = false;\n  this.disconnected = true;\n  delete this.id;\n  this.emit('disconnect', reason);\n};\n\n/**\n * Called with socket packet.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.onpacket = function (packet) {\n  var sameNamespace = packet.nsp === this.nsp;\n  var rootNamespaceError = packet.type === parser.ERROR && packet.nsp === '/';\n\n  if (!sameNamespace && !rootNamespaceError) return;\n\n  switch (packet.type) {\n    case parser.CONNECT:\n      this.onconnect();\n      break;\n\n    case parser.EVENT:\n      this.onevent(packet);\n      break;\n\n    case parser.BINARY_EVENT:\n      this.onevent(packet);\n      break;\n\n    case parser.ACK:\n      this.onack(packet);\n      break;\n\n    case parser.BINARY_ACK:\n      this.onack(packet);\n      break;\n\n    case parser.DISCONNECT:\n      this.ondisconnect();\n      break;\n\n    case parser.ERROR:\n      this.emit('error', packet.data);\n      break;\n  }\n};\n\n/**\n * Called upon a server event.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.onevent = function (packet) {\n  var args = packet.data || [];\n  debug('emitting event %j', args);\n\n  if (null != packet.id) {\n    debug('attaching ack callback to event');\n    args.push(this.ack(packet.id));\n  }\n\n  if (this.connected) {\n    emit.apply(this, args);\n  } else {\n    this.receiveBuffer.push(args);\n  }\n};\n\n/**\n * Produces an ack callback to emit with an event.\n *\n * @api private\n */\n\nSocket.prototype.ack = function (id) {\n  var self = this;\n  var sent = false;\n  return function () {\n    // prevent double callbacks\n    if (sent) return;\n    sent = true;\n    var args = toArray(arguments);\n    debug('sending ack %j', args);\n\n    self.packet({\n      type: hasBin(args) ? parser.BINARY_ACK : parser.ACK,\n      id: id,\n      data: args\n    });\n  };\n};\n\n/**\n * Called upon a server acknowlegement.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.onack = function (packet) {\n  var ack = this.acks[packet.id];\n  if ('function' === typeof ack) {\n    debug('calling ack %s with %j', packet.id, packet.data);\n    ack.apply(this, packet.data);\n    delete this.acks[packet.id];\n  } else {\n    debug('bad ack %s', packet.id);\n  }\n};\n\n/**\n * Called upon server connect.\n *\n * @api private\n */\n\nSocket.prototype.onconnect = function () {\n  this.connected = true;\n  this.disconnected = false;\n  this.emit('connect');\n  this.emitBuffered();\n};\n\n/**\n * Emit buffered events (received and emitted).\n *\n * @api private\n */\n\nSocket.prototype.emitBuffered = function () {\n  var i;\n  for (i = 0; i < this.receiveBuffer.length; i++) {\n    emit.apply(this, this.receiveBuffer[i]);\n  }\n  this.receiveBuffer = [];\n\n  for (i = 0; i < this.sendBuffer.length; i++) {\n    this.packet(this.sendBuffer[i]);\n  }\n  this.sendBuffer = [];\n};\n\n/**\n * Called upon server disconnect.\n *\n * @api private\n */\n\nSocket.prototype.ondisconnect = function () {\n  debug('server disconnect (%s)', this.nsp);\n  this.destroy();\n  this.onclose('io server disconnect');\n};\n\n/**\n * Called upon forced client/server side disconnections,\n * this method ensures the manager stops tracking us and\n * that reconnections don't get triggered for this.\n *\n * @api private.\n */\n\nSocket.prototype.destroy = function () {\n  if (this.subs) {\n    // clean subscriptions to avoid reconnections\n    for (var i = 0; i < this.subs.length; i++) {\n      this.subs[i].destroy();\n    }\n    this.subs = null;\n  }\n\n  this.io.destroy(this);\n};\n\n/**\n * Disconnects the socket manually.\n *\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.close =\nSocket.prototype.disconnect = function () {\n  if (this.connected) {\n    debug('performing disconnect (%s)', this.nsp);\n    this.packet({ type: parser.DISCONNECT });\n  }\n\n  // remove socket from pool\n  this.destroy();\n\n  if (this.connected) {\n    // fire events\n    this.onclose('io client disconnect');\n  }\n  return this;\n};\n\n/**\n * Sets the compress flag.\n *\n * @param {Boolean} if `true`, compresses the sending data\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.compress = function (compress) {\n  this.flags.compress = compress;\n  return this;\n};\n\n/**\n * Sets the binary flag\n *\n * @param {Boolean} whether the emitted data contains binary\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.binary = function (binary) {\n  this.flags.binary = binary;\n  return this;\n};\n","\n/**\n * Module dependencies.\n */\n\nvar eio = require('engine.io-client');\nvar Socket = require('./socket');\nvar Emitter = require('component-emitter');\nvar parser = require('socket.io-parser');\nvar on = require('./on');\nvar bind = require('component-bind');\nvar debug = require('debug')('socket.io-client:manager');\nvar indexOf = require('indexof');\nvar Backoff = require('backo2');\n\n/**\n * IE6+ hasOwnProperty\n */\n\nvar has = Object.prototype.hasOwnProperty;\n\n/**\n * Module exports\n */\n\nmodule.exports = Manager;\n\n/**\n * `Manager` constructor.\n *\n * @param {String} engine instance or engine uri/opts\n * @param {Object} options\n * @api public\n */\n\nfunction Manager (uri, opts) {\n  if (!(this instanceof Manager)) return new Manager(uri, opts);\n  if (uri && ('object' === typeof uri)) {\n    opts = uri;\n    uri = undefined;\n  }\n  opts = opts || {};\n\n  opts.path = opts.path || '/socket.io';\n  this.nsps = {};\n  this.subs = [];\n  this.opts = opts;\n  this.reconnection(opts.reconnection !== false);\n  this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n  this.reconnectionDelay(opts.reconnectionDelay || 1000);\n  this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n  this.randomizationFactor(opts.randomizationFactor || 0.5);\n  this.backoff = new Backoff({\n    min: this.reconnectionDelay(),\n    max: this.reconnectionDelayMax(),\n    jitter: this.randomizationFactor()\n  });\n  this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n  this.readyState = 'closed';\n  this.uri = uri;\n  this.connecting = [];\n  this.lastPing = null;\n  this.encoding = false;\n  this.packetBuffer = [];\n  var _parser = opts.parser || parser;\n  this.encoder = new _parser.Encoder();\n  this.decoder = new _parser.Decoder();\n  this.autoConnect = opts.autoConnect !== false;\n  if (this.autoConnect) this.open();\n}\n\n/**\n * Propagate given event to sockets and emit on `this`\n *\n * @api private\n */\n\nManager.prototype.emitAll = function () {\n  this.emit.apply(this, arguments);\n  for (var nsp in this.nsps) {\n    if (has.call(this.nsps, nsp)) {\n      this.nsps[nsp].emit.apply(this.nsps[nsp], arguments);\n    }\n  }\n};\n\n/**\n * Update `socket.id` of all sockets\n *\n * @api private\n */\n\nManager.prototype.updateSocketIds = function () {\n  for (var nsp in this.nsps) {\n    if (has.call(this.nsps, nsp)) {\n      this.nsps[nsp].id = this.generateId(nsp);\n    }\n  }\n};\n\n/**\n * generate `socket.id` for the given `nsp`\n *\n * @param {String} nsp\n * @return {String}\n * @api private\n */\n\nManager.prototype.generateId = function (nsp) {\n  return (nsp === '/' ? '' : (nsp + '#')) + this.engine.id;\n};\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Manager.prototype);\n\n/**\n * Sets the `reconnection` config.\n *\n * @param {Boolean} true/false if it should automatically reconnect\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnection = function (v) {\n  if (!arguments.length) return this._reconnection;\n  this._reconnection = !!v;\n  return this;\n};\n\n/**\n * Sets the reconnection attempts config.\n *\n * @param {Number} max reconnection attempts before giving up\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnectionAttempts = function (v) {\n  if (!arguments.length) return this._reconnectionAttempts;\n  this._reconnectionAttempts = v;\n  return this;\n};\n\n/**\n * Sets the delay between reconnections.\n *\n * @param {Number} delay\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnectionDelay = function (v) {\n  if (!arguments.length) return this._reconnectionDelay;\n  this._reconnectionDelay = v;\n  this.backoff && this.backoff.setMin(v);\n  return this;\n};\n\nManager.prototype.randomizationFactor = function (v) {\n  if (!arguments.length) return this._randomizationFactor;\n  this._randomizationFactor = v;\n  this.backoff && this.backoff.setJitter(v);\n  return this;\n};\n\n/**\n * Sets the maximum delay between reconnections.\n *\n * @param {Number} delay\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnectionDelayMax = function (v) {\n  if (!arguments.length) return this._reconnectionDelayMax;\n  this._reconnectionDelayMax = v;\n  this.backoff && this.backoff.setMax(v);\n  return this;\n};\n\n/**\n * Sets the connection timeout. `false` to disable\n *\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.timeout = function (v) {\n  if (!arguments.length) return this._timeout;\n  this._timeout = v;\n  return this;\n};\n\n/**\n * Starts trying to reconnect if reconnection is enabled and we have not\n * started reconnecting yet\n *\n * @api private\n */\n\nManager.prototype.maybeReconnectOnOpen = function () {\n  // Only try to reconnect if it's the first time we're connecting\n  if (!this.reconnecting && this._reconnection && this.backoff.attempts === 0) {\n    // keeps reconnection from firing twice for the same reconnection loop\n    this.reconnect();\n  }\n};\n\n/**\n * Sets the current transport `socket`.\n *\n * @param {Function} optional, callback\n * @return {Manager} self\n * @api public\n */\n\nManager.prototype.open =\nManager.prototype.connect = function (fn, opts) {\n  debug('readyState %s', this.readyState);\n  if (~this.readyState.indexOf('open')) return this;\n\n  debug('opening %s', this.uri);\n  this.engine = eio(this.uri, this.opts);\n  var socket = this.engine;\n  var self = this;\n  this.readyState = 'opening';\n  this.skipReconnect = false;\n\n  // emit `open`\n  var openSub = on(socket, 'open', function () {\n    self.onopen();\n    fn && fn();\n  });\n\n  // emit `connect_error`\n  var errorSub = on(socket, 'error', function (data) {\n    debug('connect_error');\n    self.cleanup();\n    self.readyState = 'closed';\n    self.emitAll('connect_error', data);\n    if (fn) {\n      var err = new Error('Connection error');\n      err.data = data;\n      fn(err);\n    } else {\n      // Only do this if there is no fn to handle the error\n      self.maybeReconnectOnOpen();\n    }\n  });\n\n  // emit `connect_timeout`\n  if (false !== this._timeout) {\n    var timeout = this._timeout;\n    debug('connect attempt will timeout after %d', timeout);\n\n    // set timer\n    var timer = setTimeout(function () {\n      debug('connect attempt timed out after %d', timeout);\n      openSub.destroy();\n      socket.close();\n      socket.emit('error', 'timeout');\n      self.emitAll('connect_timeout', timeout);\n    }, timeout);\n\n    this.subs.push({\n      destroy: function () {\n        clearTimeout(timer);\n      }\n    });\n  }\n\n  this.subs.push(openSub);\n  this.subs.push(errorSub);\n\n  return this;\n};\n\n/**\n * Called upon transport open.\n *\n * @api private\n */\n\nManager.prototype.onopen = function () {\n  debug('open');\n\n  // clear old subs\n  this.cleanup();\n\n  // mark as open\n  this.readyState = 'open';\n  this.emit('open');\n\n  // add new subs\n  var socket = this.engine;\n  this.subs.push(on(socket, 'data', bind(this, 'ondata')));\n  this.subs.push(on(socket, 'ping', bind(this, 'onping')));\n  this.subs.push(on(socket, 'pong', bind(this, 'onpong')));\n  this.subs.push(on(socket, 'error', bind(this, 'onerror')));\n  this.subs.push(on(socket, 'close', bind(this, 'onclose')));\n  this.subs.push(on(this.decoder, 'decoded', bind(this, 'ondecoded')));\n};\n\n/**\n * Called upon a ping.\n *\n * @api private\n */\n\nManager.prototype.onping = function () {\n  this.lastPing = new Date();\n  this.emitAll('ping');\n};\n\n/**\n * Called upon a packet.\n *\n * @api private\n */\n\nManager.prototype.onpong = function () {\n  this.emitAll('pong', new Date() - this.lastPing);\n};\n\n/**\n * Called with data.\n *\n * @api private\n */\n\nManager.prototype.ondata = function (data) {\n  this.decoder.add(data);\n};\n\n/**\n * Called when parser fully decodes a packet.\n *\n * @api private\n */\n\nManager.prototype.ondecoded = function (packet) {\n  this.emit('packet', packet);\n};\n\n/**\n * Called upon socket error.\n *\n * @api private\n */\n\nManager.prototype.onerror = function (err) {\n  debug('error', err);\n  this.emitAll('error', err);\n};\n\n/**\n * Creates a new socket for the given `nsp`.\n *\n * @return {Socket}\n * @api public\n */\n\nManager.prototype.socket = function (nsp, opts) {\n  var socket = this.nsps[nsp];\n  if (!socket) {\n    socket = new Socket(this, nsp, opts);\n    this.nsps[nsp] = socket;\n    var self = this;\n    socket.on('connecting', onConnecting);\n    socket.on('connect', function () {\n      socket.id = self.generateId(nsp);\n    });\n\n    if (this.autoConnect) {\n      // manually call here since connecting event is fired before listening\n      onConnecting();\n    }\n  }\n\n  function onConnecting () {\n    if (!~indexOf(self.connecting, socket)) {\n      self.connecting.push(socket);\n    }\n  }\n\n  return socket;\n};\n\n/**\n * Called upon a socket close.\n *\n * @param {Socket} socket\n */\n\nManager.prototype.destroy = function (socket) {\n  var index = indexOf(this.connecting, socket);\n  if (~index) this.connecting.splice(index, 1);\n  if (this.connecting.length) return;\n\n  this.close();\n};\n\n/**\n * Writes a packet.\n *\n * @param {Object} packet\n * @api private\n */\n\nManager.prototype.packet = function (packet) {\n  debug('writing packet %j', packet);\n  var self = this;\n  if (packet.query && packet.type === 0) packet.nsp += '?' + packet.query;\n\n  if (!self.encoding) {\n    // encode, then write to engine with result\n    self.encoding = true;\n    this.encoder.encode(packet, function (encodedPackets) {\n      for (var i = 0; i < encodedPackets.length; i++) {\n        self.engine.write(encodedPackets[i], packet.options);\n      }\n      self.encoding = false;\n      self.processPacketQueue();\n    });\n  } else { // add packet to the queue\n    self.packetBuffer.push(packet);\n  }\n};\n\n/**\n * If packet buffer is non-empty, begins encoding the\n * next packet in line.\n *\n * @api private\n */\n\nManager.prototype.processPacketQueue = function () {\n  if (this.packetBuffer.length > 0 && !this.encoding) {\n    var pack = this.packetBuffer.shift();\n    this.packet(pack);\n  }\n};\n\n/**\n * Clean up transport subscriptions and packet buffer.\n *\n * @api private\n */\n\nManager.prototype.cleanup = function () {\n  debug('cleanup');\n\n  var subsLength = this.subs.length;\n  for (var i = 0; i < subsLength; i++) {\n    var sub = this.subs.shift();\n    sub.destroy();\n  }\n\n  this.packetBuffer = [];\n  this.encoding = false;\n  this.lastPing = null;\n\n  this.decoder.destroy();\n};\n\n/**\n * Close the current socket.\n *\n * @api private\n */\n\nManager.prototype.close =\nManager.prototype.disconnect = function () {\n  debug('disconnect');\n  this.skipReconnect = true;\n  this.reconnecting = false;\n  if ('opening' === this.readyState) {\n    // `onclose` will not fire because\n    // an open event never happened\n    this.cleanup();\n  }\n  this.backoff.reset();\n  this.readyState = 'closed';\n  if (this.engine) this.engine.close();\n};\n\n/**\n * Called upon engine close.\n *\n * @api private\n */\n\nManager.prototype.onclose = function (reason) {\n  debug('onclose');\n\n  this.cleanup();\n  this.backoff.reset();\n  this.readyState = 'closed';\n  this.emit('close', reason);\n\n  if (this._reconnection && !this.skipReconnect) {\n    this.reconnect();\n  }\n};\n\n/**\n * Attempt a reconnection.\n *\n * @api private\n */\n\nManager.prototype.reconnect = function () {\n  if (this.reconnecting || this.skipReconnect) return this;\n\n  var self = this;\n\n  if (this.backoff.attempts >= this._reconnectionAttempts) {\n    debug('reconnect failed');\n    this.backoff.reset();\n    this.emitAll('reconnect_failed');\n    this.reconnecting = false;\n  } else {\n    var delay = this.backoff.duration();\n    debug('will wait %dms before reconnect attempt', delay);\n\n    this.reconnecting = true;\n    var timer = setTimeout(function () {\n      if (self.skipReconnect) return;\n\n      debug('attempting reconnect');\n      self.emitAll('reconnect_attempt', self.backoff.attempts);\n      self.emitAll('reconnecting', self.backoff.attempts);\n\n      // check again for the case socket closed in above events\n      if (self.skipReconnect) return;\n\n      self.open(function (err) {\n        if (err) {\n          debug('reconnect attempt error');\n          self.reconnecting = false;\n          self.reconnect();\n          self.emitAll('reconnect_error', err.data);\n        } else {\n          debug('reconnect success');\n          self.onreconnect();\n        }\n      });\n    }, delay);\n\n    this.subs.push({\n      destroy: function () {\n        clearTimeout(timer);\n      }\n    });\n  }\n};\n\n/**\n * Called upon successful reconnect.\n *\n * @api private\n */\n\nManager.prototype.onreconnect = function () {\n  var attempt = this.backoff.attempts;\n  this.reconnecting = false;\n  this.backoff.reset();\n  this.updateSocketIds();\n  this.emitAll('reconnect', attempt);\n};\n","\n/**\n * Module dependencies.\n */\n\nvar url = require('./url');\nvar parser = require('socket.io-parser');\nvar Manager = require('./manager');\nvar debug = require('debug')('socket.io-client');\n\n/**\n * Module exports.\n */\n\nmodule.exports = exports = lookup;\n\n/**\n * Managers cache.\n */\n\nvar cache = exports.managers = {};\n\n/**\n * Looks up an existing `Manager` for multiplexing.\n * If the user summons:\n *\n *   `io('http://localhost/a');`\n *   `io('http://localhost/b');`\n *\n * We reuse the existing instance based on same scheme/port/host,\n * and we initialize sockets for each namespace.\n *\n * @api public\n */\n\nfunction lookup (uri, opts) {\n  if (typeof uri === 'object') {\n    opts = uri;\n    uri = undefined;\n  }\n\n  opts = opts || {};\n\n  var parsed = url(uri);\n  var source = parsed.source;\n  var id = parsed.id;\n  var path = parsed.path;\n  var sameNamespace = cache[id] && path in cache[id].nsps;\n  var newConnection = opts.forceNew || opts['force new connection'] ||\n                      false === opts.multiplex || sameNamespace;\n\n  var io;\n\n  if (newConnection) {\n    debug('ignoring socket cache for %s', source);\n    io = Manager(source, opts);\n  } else {\n    if (!cache[id]) {\n      debug('new io instance for %s', source);\n      cache[id] = Manager(source, opts);\n    }\n    io = cache[id];\n  }\n  if (parsed.query && !opts.query) {\n    opts.query = parsed.query;\n  }\n  return io.socket(parsed.path, opts);\n}\n\n/**\n * Protocol version.\n *\n * @api public\n */\n\nexports.protocol = parser.protocol;\n\n/**\n * `connect`.\n *\n * @param {String} uri\n * @api public\n */\n\nexports.connect = lookup;\n\n/**\n * Expose constructors for standalone build.\n *\n * @api public\n */\n\nexports.Manager = require('./manager');\nexports.Socket = require('./socket');\n","\n/**\n * Module dependencies.\n */\n\nvar parseuri = require('parseuri');\nvar debug = require('debug')('socket.io-client:url');\n\n/**\n * Module exports.\n */\n\nmodule.exports = url;\n\n/**\n * URL parser.\n *\n * @param {String} url\n * @param {Object} An object meant to mimic window.location.\n *                 Defaults to window.location.\n * @api public\n */\n\nfunction url (uri, loc) {\n  var obj = uri;\n\n  // default to window.location\n  loc = loc || (typeof location !== 'undefined' && location);\n  if (null == uri) uri = loc.protocol + '//' + loc.host;\n\n  // relative path support\n  if ('string' === typeof uri) {\n    if ('/' === uri.charAt(0)) {\n      if ('/' === uri.charAt(1)) {\n        uri = loc.protocol + uri;\n      } else {\n        uri = loc.host + uri;\n      }\n    }\n\n    if (!/^(https?|wss?):\\/\\//.test(uri)) {\n      debug('protocol-less url %s', uri);\n      if ('undefined' !== typeof loc) {\n        uri = loc.protocol + '//' + uri;\n      } else {\n        uri = 'https://' + uri;\n      }\n    }\n\n    // parse\n    debug('parse %s', uri);\n    obj = parseuri(uri);\n  }\n\n  // make sure we treat `localhost:80` and `localhost` equally\n  if (!obj.port) {\n    if (/^(http|ws)$/.test(obj.protocol)) {\n      obj.port = '80';\n    } else if (/^(http|ws)s$/.test(obj.protocol)) {\n      obj.port = '443';\n    }\n  }\n\n  obj.path = obj.path || '/';\n\n  var ipv6 = obj.host.indexOf(':') !== -1;\n  var host = ipv6 ? '[' + obj.host + ']' : obj.host;\n\n  // define unique id\n  obj.id = obj.protocol + '://' + host + ':' + obj.port;\n  // define href\n  obj.href = obj.protocol + '://' + host + (loc && loc.port === obj.port ? '' : (':' + obj.port));\n\n  return obj;\n}\n","\n/**\n * Module exports.\n */\n\nmodule.exports = on;\n\n/**\n * Helper for subscriptions.\n *\n * @param {Object|EventEmitter} obj with `Emitter` mixin or `EventEmitter`\n * @param {String} event name\n * @param {Function} callback\n * @api public\n */\n\nfunction on (obj, ev, fn) {\n  obj.on(ev, fn);\n  return {\n    destroy: function () {\n      obj.removeListener(ev, fn);\n    }\n  };\n}\n"],"sourceRoot":""}