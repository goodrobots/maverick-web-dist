{"version":3,"sources":["webpack:///./node_modules/after/index.js"],"names":["after","count","callback","err_cb","bail","noop","proxy","err","result","Error","module","exports"],"mappings":"6FAEA,SAASA,EAAMC,EAAOC,EAAUC,GAC5B,IAAIC,GAAO,EAIX,OAHAD,EAASA,GAAUE,EACnBC,EAAML,MAAQA,EAEI,IAAVA,EAAeC,IAAaI,EAEpC,SAASA,EAAMC,EAAKC,GAChB,GAAIF,EAAML,OAAS,EACf,MAAM,IAAIQ,MAAM,iCAElBH,EAAML,MAGJM,GACAH,GAAO,EACPF,EAASK,GAETL,EAAWC,GACY,IAAhBG,EAAML,OAAgBG,GAC7BF,EAAS,KAAMM,IAK3B,SAASH,KA3BTK,EAAOC,QAAUX","file":"js/yarn.after.99a8656b.js","sourcesContent":["module.exports = after\n\nfunction after(count, callback, err_cb) {\n    var bail = false\n    err_cb = err_cb || noop\n    proxy.count = count\n\n    return (count === 0) ? callback() : proxy\n\n    function proxy(err, result) {\n        if (proxy.count <= 0) {\n            throw new Error('after called too many times')\n        }\n        --proxy.count\n\n        // after first error, rest are passed to err_cb\n        if (err) {\n            bail = true\n            callback(err)\n            // future error callbacks will go to error handler\n            callback = err_cb\n        } else if (proxy.count === 0 && !bail) {\n            callback(null, result)\n        }\n    }\n}\n\nfunction noop() {}\n"],"sourceRoot":""}