{"version":3,"sources":["webpack:///./node_modules/debug/src/browser.js","webpack:///./node_modules/debug/node_modules/ms/index.js","webpack:///./node_modules/debug/src/common.js"],"names":["useColors","window","process","type","__nwjs","navigator","userAgent","toLowerCase","match","document","documentElement","style","WebkitAppearance","console","firebug","exception","table","parseInt","RegExp","$1","formatArgs","args","this","namespace","module","exports","humanize","diff","c","color","splice","index","lastC","replace","log","save","namespaces","storage","setItem","removeItem","error","load","r","getItem","DEBUG","localstorage","localStorage","colors","formatters","j","v","JSON","stringify","message","s","m","h","d","w","y","parse","str","String","length","exec","n","parseFloat","fmtShort","ms","msAbs","Math","abs","round","fmtLong","plural","name","isPlural","val","options","isFinite","long","Error","setup","env","selectColor","hash","i","charCodeAt","createDebug","prevTime","debug","enabled","self","curr","Number","Date","prev","coerce","unshift","format","formatter","call","logFn","apply","destroy","extend","init","instances","push","indexOf","delimiter","newDebug","enable","names","skips","split","len","substr","instance","disable","map","toNamespace","join","test","regexp","toString","substring","stack","default","Object","keys","forEach","key"],"mappings":"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","file":"js/yarn.debug.2edbc132.js","sourcesContent":["/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\n\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n\t'#0000CC',\n\t'#0000FF',\n\t'#0033CC',\n\t'#0033FF',\n\t'#0066CC',\n\t'#0066FF',\n\t'#0099CC',\n\t'#0099FF',\n\t'#00CC00',\n\t'#00CC33',\n\t'#00CC66',\n\t'#00CC99',\n\t'#00CCCC',\n\t'#00CCFF',\n\t'#3300CC',\n\t'#3300FF',\n\t'#3333CC',\n\t'#3333FF',\n\t'#3366CC',\n\t'#3366FF',\n\t'#3399CC',\n\t'#3399FF',\n\t'#33CC00',\n\t'#33CC33',\n\t'#33CC66',\n\t'#33CC99',\n\t'#33CCCC',\n\t'#33CCFF',\n\t'#6600CC',\n\t'#6600FF',\n\t'#6633CC',\n\t'#6633FF',\n\t'#66CC00',\n\t'#66CC33',\n\t'#9900CC',\n\t'#9900FF',\n\t'#9933CC',\n\t'#9933FF',\n\t'#99CC00',\n\t'#99CC33',\n\t'#CC0000',\n\t'#CC0033',\n\t'#CC0066',\n\t'#CC0099',\n\t'#CC00CC',\n\t'#CC00FF',\n\t'#CC3300',\n\t'#CC3333',\n\t'#CC3366',\n\t'#CC3399',\n\t'#CC33CC',\n\t'#CC33FF',\n\t'#CC6600',\n\t'#CC6633',\n\t'#CC9900',\n\t'#CC9933',\n\t'#CCCC00',\n\t'#CCCC33',\n\t'#FF0000',\n\t'#FF0033',\n\t'#FF0066',\n\t'#FF0099',\n\t'#FF00CC',\n\t'#FF00FF',\n\t'#FF3300',\n\t'#FF3333',\n\t'#FF3366',\n\t'#FF3399',\n\t'#FF33CC',\n\t'#FF33FF',\n\t'#FF6600',\n\t'#FF6633',\n\t'#FF9900',\n\t'#FF9933',\n\t'#FFCC00',\n\t'#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\n// eslint-disable-next-line complexity\nfunction useColors() {\n\t// NB: In an Electron preload script, document will be defined but not fully\n\t// initialized. Since we know we're in Chrome, we'll just detect this case\n\t// explicitly\n\tif (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n\t\treturn true;\n\t}\n\n\t// Internet Explorer and Edge do not support colors.\n\tif (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n\t\treturn false;\n\t}\n\n\t// Is webkit? http://stackoverflow.com/a/16459606/376773\n\t// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\treturn (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n\t\t// Is firebug? http://stackoverflow.com/a/398120/376773\n\t\t(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n\t\t// Is firefox >= v31?\n\t\t// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n\t\t// Double check webkit in userAgent just in case we are in a worker\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\targs[0] = (this.useColors ? '%c' : '') +\n\t\tthis.namespace +\n\t\t(this.useColors ? ' %c' : ' ') +\n\t\targs[0] +\n\t\t(this.useColors ? '%c ' : ' ') +\n\t\t'+' + module.exports.humanize(this.diff);\n\n\tif (!this.useColors) {\n\t\treturn;\n\t}\n\n\tconst c = 'color: ' + this.color;\n\targs.splice(1, 0, c, 'color: inherit');\n\n\t// The final \"%c\" is somewhat tricky, because there could be other\n\t// arguments passed either before or after the %c, so we need to\n\t// figure out the correct index to insert the CSS into\n\tlet index = 0;\n\tlet lastC = 0;\n\targs[0].replace(/%[a-zA-Z%]/g, match => {\n\t\tif (match === '%%') {\n\t\t\treturn;\n\t\t}\n\t\tindex++;\n\t\tif (match === '%c') {\n\t\t\t// We only are interested in the *last* %c\n\t\t\t// (the user may have provided their own)\n\t\t\tlastC = index;\n\t\t}\n\t});\n\n\targs.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\nfunction log(...args) {\n\t// This hackery is required for IE8/9, where\n\t// the `console.log` function doesn't have 'apply'\n\treturn typeof console === 'object' &&\n\t\tconsole.log &&\n\t\tconsole.log(...args);\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\ttry {\n\t\tif (namespaces) {\n\t\t\texports.storage.setItem('debug', namespaces);\n\t\t} else {\n\t\t\texports.storage.removeItem('debug');\n\t\t}\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\nfunction load() {\n\tlet r;\n\ttry {\n\t\tr = exports.storage.getItem('debug');\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n\n\t// If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\tif (!r && typeof process !== 'undefined' && 'env' in process) {\n\t\tr = process.env.DEBUG;\n\t}\n\n\treturn r;\n}\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n\ttry {\n\t\t// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n\t\t// The Browser also has localStorage in the global context.\n\t\treturn localStorage;\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n\ttry {\n\t\treturn JSON.stringify(v);\n\t} catch (error) {\n\t\treturn '[UnexpectedJSONParseError]: ' + error.message;\n\t}\n};\n","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\n\nfunction setup(env) {\n\tcreateDebug.debug = createDebug;\n\tcreateDebug.default = createDebug;\n\tcreateDebug.coerce = coerce;\n\tcreateDebug.disable = disable;\n\tcreateDebug.enable = enable;\n\tcreateDebug.enabled = enabled;\n\tcreateDebug.humanize = require('ms');\n\n\tObject.keys(env).forEach(key => {\n\t\tcreateDebug[key] = env[key];\n\t});\n\n\t/**\n\t* Active `debug` instances.\n\t*/\n\tcreateDebug.instances = [];\n\n\t/**\n\t* The currently active debug mode names, and names to skip.\n\t*/\n\n\tcreateDebug.names = [];\n\tcreateDebug.skips = [];\n\n\t/**\n\t* Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t*\n\t* Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n\t*/\n\tcreateDebug.formatters = {};\n\n\t/**\n\t* Selects a color for a debug namespace\n\t* @param {String} namespace The namespace string for the for the debug instance to be colored\n\t* @return {Number|String} An ANSI color code for the given namespace\n\t* @api private\n\t*/\n\tfunction selectColor(namespace) {\n\t\tlet hash = 0;\n\n\t\tfor (let i = 0; i < namespace.length; i++) {\n\t\t\thash = ((hash << 5) - hash) + namespace.charCodeAt(i);\n\t\t\thash |= 0; // Convert to 32bit integer\n\t\t}\n\n\t\treturn createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n\t}\n\tcreateDebug.selectColor = selectColor;\n\n\t/**\n\t* Create a debugger with the given `namespace`.\n\t*\n\t* @param {String} namespace\n\t* @return {Function}\n\t* @api public\n\t*/\n\tfunction createDebug(namespace) {\n\t\tlet prevTime;\n\n\t\tfunction debug(...args) {\n\t\t\t// Disabled?\n\t\t\tif (!debug.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst self = debug;\n\n\t\t\t// Set `diff` timestamp\n\t\t\tconst curr = Number(new Date());\n\t\t\tconst ms = curr - (prevTime || curr);\n\t\t\tself.diff = ms;\n\t\t\tself.prev = prevTime;\n\t\t\tself.curr = curr;\n\t\t\tprevTime = curr;\n\n\t\t\targs[0] = createDebug.coerce(args[0]);\n\n\t\t\tif (typeof args[0] !== 'string') {\n\t\t\t\t// Anything else let's inspect with %O\n\t\t\t\targs.unshift('%O');\n\t\t\t}\n\n\t\t\t// Apply any `formatters` transformations\n\t\t\tlet index = 0;\n\t\t\targs[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\n\t\t\t\t// If we encounter an escaped % then don't increase the array index\n\t\t\t\tif (match === '%%') {\n\t\t\t\t\treturn match;\n\t\t\t\t}\n\t\t\t\tindex++;\n\t\t\t\tconst formatter = createDebug.formatters[format];\n\t\t\t\tif (typeof formatter === 'function') {\n\t\t\t\t\tconst val = args[index];\n\t\t\t\t\tmatch = formatter.call(self, val);\n\n\t\t\t\t\t// Now we need to remove `args[index]` since it's inlined in the `format`\n\t\t\t\t\targs.splice(index, 1);\n\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t\treturn match;\n\t\t\t});\n\n\t\t\t// Apply env-specific formatting (colors, etc.)\n\t\t\tcreateDebug.formatArgs.call(self, args);\n\n\t\t\tconst logFn = self.log || createDebug.log;\n\t\t\tlogFn.apply(self, args);\n\t\t}\n\n\t\tdebug.namespace = namespace;\n\t\tdebug.enabled = createDebug.enabled(namespace);\n\t\tdebug.useColors = createDebug.useColors();\n\t\tdebug.color = selectColor(namespace);\n\t\tdebug.destroy = destroy;\n\t\tdebug.extend = extend;\n\t\t// Debug.formatArgs = formatArgs;\n\t\t// debug.rawLog = rawLog;\n\n\t\t// env-specific initialization logic for debug instances\n\t\tif (typeof createDebug.init === 'function') {\n\t\t\tcreateDebug.init(debug);\n\t\t}\n\n\t\tcreateDebug.instances.push(debug);\n\n\t\treturn debug;\n\t}\n\n\tfunction destroy() {\n\t\tconst index = createDebug.instances.indexOf(this);\n\t\tif (index !== -1) {\n\t\t\tcreateDebug.instances.splice(index, 1);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tfunction extend(namespace, delimiter) {\n\t\tconst newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n\t\tnewDebug.log = this.log;\n\t\treturn newDebug;\n\t}\n\n\t/**\n\t* Enables a debug mode by namespaces. This can include modes\n\t* separated by a colon and wildcards.\n\t*\n\t* @param {String} namespaces\n\t* @api public\n\t*/\n\tfunction enable(namespaces) {\n\t\tcreateDebug.save(namespaces);\n\n\t\tcreateDebug.names = [];\n\t\tcreateDebug.skips = [];\n\n\t\tlet i;\n\t\tconst split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n\t\tconst len = split.length;\n\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tif (!split[i]) {\n\t\t\t\t// ignore empty strings\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tnamespaces = split[i].replace(/\\*/g, '.*?');\n\n\t\t\tif (namespaces[0] === '-') {\n\t\t\t\tcreateDebug.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n\t\t\t} else {\n\t\t\t\tcreateDebug.names.push(new RegExp('^' + namespaces + '$'));\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0; i < createDebug.instances.length; i++) {\n\t\t\tconst instance = createDebug.instances[i];\n\t\t\tinstance.enabled = createDebug.enabled(instance.namespace);\n\t\t}\n\t}\n\n\t/**\n\t* Disable debug output.\n\t*\n\t* @return {String} namespaces\n\t* @api public\n\t*/\n\tfunction disable() {\n\t\tconst namespaces = [\n\t\t\t...createDebug.names.map(toNamespace),\n\t\t\t...createDebug.skips.map(toNamespace).map(namespace => '-' + namespace)\n\t\t].join(',');\n\t\tcreateDebug.enable('');\n\t\treturn namespaces;\n\t}\n\n\t/**\n\t* Returns true if the given mode name is enabled, false otherwise.\n\t*\n\t* @param {String} name\n\t* @return {Boolean}\n\t* @api public\n\t*/\n\tfunction enabled(name) {\n\t\tif (name[name.length - 1] === '*') {\n\t\t\treturn true;\n\t\t}\n\n\t\tlet i;\n\t\tlet len;\n\n\t\tfor (i = 0, len = createDebug.skips.length; i < len; i++) {\n\t\t\tif (createDebug.skips[i].test(name)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0, len = createDebug.names.length; i < len; i++) {\n\t\t\tif (createDebug.names[i].test(name)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t* Convert regexp to namespace\n\t*\n\t* @param {RegExp} regxep\n\t* @return {String} namespace\n\t* @api private\n\t*/\n\tfunction toNamespace(regexp) {\n\t\treturn regexp.toString()\n\t\t\t.substring(2, regexp.toString().length - 2)\n\t\t\t.replace(/\\.\\*\\?$/, '*');\n\t}\n\n\t/**\n\t* Coerce `val`.\n\t*\n\t* @param {Mixed} val\n\t* @return {Mixed}\n\t* @api private\n\t*/\n\tfunction coerce(val) {\n\t\tif (val instanceof Error) {\n\t\t\treturn val.stack || val.message;\n\t\t}\n\t\treturn val;\n\t}\n\n\tcreateDebug.enable(createDebug.load());\n\n\treturn createDebug;\n}\n\nmodule.exports = setup;\n"],"sourceRoot":""}